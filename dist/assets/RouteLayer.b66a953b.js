var ii=Object.defineProperty,ri=Object.defineProperties;var oi=Object.getOwnPropertyDescriptors;var Dt=Object.getOwnPropertySymbols;var si=Object.prototype.hasOwnProperty,ai=Object.prototype.propertyIsEnumerable;var Ct=(e,i,o)=>i in e?ii(e,i,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[i]=o,te=(e,i)=>{for(var o in i||(i={}))si.call(i,o)&&Ct(e,o,i[o]);if(Dt)for(var o of Dt(i))ai.call(i,o)&&Ct(e,o,i[o]);return e},se=(e,i)=>ri(e,oi(i));import{e as t,d as r,qj as k,n as L,dg as U,pt as Xe,pv as ce,S as li,jm as x,fq as P,lF as ne,t as O,fg as g,gE as V,I as oe,iL as Ve,bF as Ae,qk as it,dw as ni,cA as kt,r as l,cR as Ut,g as X,am as $t,cJ as me,cX as be,cr as De,aP as He,aY as J,cv as ui,l_ as ge,fp as fe,v as pi,iH as di,cY as mi,iI as ci,E as Y,a8 as yi,p2 as bi,p3 as hi,p4 as fi,p5 as vi,p8 as Ti,eG as gi,z as Si,q as wi,cW as Ni,cq as Oi,gS as Ai,dt as It,q2 as Di,cN as Ci,d5 as Ii,d2 as Bi,ql as Bt,A as Fi,qm as ji,kS as xi,cj as Ei,ck as Mi}from"./index.165b2b59.js";import{r as Li}from"./originUtils.0d625f4b.js";import{f as Pi}from"./portalItemUtils.9b39c34e.js";import"./multiOriginJSONSupportUtils.8128aa52.js";let q=class extends U{constructor(){super(...arguments),this.directionLines=new Xe({color:[0,122,194],width:6}),this.directionPoints=new ce({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new ce({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new li({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new Xe({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new Xe({width:8,color:[20,89,127]}),this.firstStop=new ce({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.middleStop=new ce({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.lastStop=new ce({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.invalidStop=new ce({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.waypointStop=new ce({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.breakStop=new ce({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};t([r({nonNullable:!0,types:k})],q.prototype,"directionLines",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"directionPoints",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"pointBarriers",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"polygonBarriers",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"polylineBarriers",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"routeInfo",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"firstStop",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"middleStop",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"lastStop",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"invalidStop",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"waypointStop",void 0),t([r({nonNullable:!0,types:k})],q.prototype,"breakStop",void 0),q=t([L("esri.layers.support.DefaultSymbols")],q);const _t=q,Wt=x()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),mt=x()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),Ri=x()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),Ji=x()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),ki=x()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"});x()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"});const Vt=x()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"});x()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"});x()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"});const Ui=x()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),_=x()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),Me=x()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),he=x()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),Ge=x()({1:"right",2:"left"},{useNumericKeys:!0}),Q=x()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),Le=x()({0:"permit",1:"restrict"},{useNumericKeys:!0}),qe=x()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),ze=x()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),$i=x()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),_i=x()({Kilometers:"kilometers",Miles:"miles"},{ignoreUnknown:!1}),Ye=x()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),ee=x()({Kilometers:"kilometers",Miles:"miles",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),Ke=x()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),Wi=x()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),Vi=x()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),Gi=x()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"});let ae=class extends U{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};t([r({type:String})],ae.prototype,"dataType",void 0),t([P(ee,{ignoreUnknown:!1})],ae.prototype,"name",void 0),t([r({type:[String]})],ae.prototype,"parameterNames",void 0),t([r({type:String})],ae.prototype,"restrictionUsageParameterName",void 0),t([P(Ye,{ignoreUnknown:!1})],ae.prototype,"timeNeutralAttributeName",void 0),t([r({type:String})],ae.prototype,"trafficSupport",void 0),t([r({type:String})],ae.prototype,"units",void 0),t([P(Gi)],ae.prototype,"usageType",void 0),ae=t([L("esri.rest.support.NetworkAttribute")],ae);const qi=ae;let ye=class extends U{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};t([r({type:Number})],ye.prototype,"buildTime",void 0),t([r({type:String})],ye.prototype,"name",void 0),t([r({type:[qi]})],ye.prototype,"networkAttributes",void 0),t([r()],ye.prototype,"networkSources",void 0),t([r({type:String})],ye.prototype,"state",void 0),ye=t([L("esri.rest.support.NetworkDataset")],ye);const zi=ye;let $=class extends ne(U){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readRestrictionAttributes(e,i){const{restrictionAttributeNames:o}=i;return O(o)?null:o.map(s=>Ke.fromJSON(s))}writeRestrictionAttributes(e,i,o){!O(e)&&e.length&&(i[o]=e.map(s=>Ke.toJSON(s)))}};t([r({type:[Object],json:{write:!0}})],$.prototype,"attributeParameterValues",void 0),t([r({type:String,json:{write:!0}})],$.prototype,"description",void 0),t([P(_i,{ignoreUnknown:!1})],$.prototype,"distanceAttributeName",void 0),t([r({type:String,json:{write:!0}})],$.prototype,"id",void 0),t([P(ee,{ignoreUnknown:!1})],$.prototype,"impedanceAttributeName",void 0),t([r({type:String,json:{write:!0}})],$.prototype,"name",void 0),t([r({type:[String],json:{write:!0}})],$.prototype,"restrictionAttributeNames",void 0),t([g("restrictionAttributeNames")],$.prototype,"readRestrictionAttributes",null),t([V("restrictionAttributeNames")],$.prototype,"writeRestrictionAttributes",null),t([r({type:Number,json:{write:{allowNull:!0}}})],$.prototype,"simplificationTolerance",void 0),t([P(Wt)],$.prototype,"simplificationToleranceUnits",void 0),t([P(Ye,{ignoreUnknown:!1})],$.prototype,"timeAttributeName",void 0),t([P(Ui)],$.prototype,"type",void 0),t([r({type:Boolean,json:{write:!0}})],$.prototype,"useHierarchy",void 0),t([P(Vt)],$.prototype,"uturnAtJunctions",void 0),$=t([L("esri.rest.support.TravelMode")],$);const ct=$;let W=class extends U{constructor(e){super(e),this.accumulateAttributeNames=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return O(e)?null:e.map(i=>ee.fromJSON(i))}writeAccumulateAttributes(e,i,o){!O(e)&&e.length&&(i[o]=e.map(s=>ee.toJSON(s)))}};t([r()],W.prototype,"accumulateAttributeNames",void 0),t([g("accumulateAttributeNames")],W.prototype,"readAccumulateAttributes",null),t([V("accumulateAttributeNames")],W.prototype,"writeAccumulateAttributes",null),t([r()],W.prototype,"currentVersion",void 0),t([r()],W.prototype,"defaultTravelMode",void 0),t([r()],W.prototype,"directionsLanguage",void 0),t([P(mt)],W.prototype,"directionsLengthUnits",void 0),t([r()],W.prototype,"directionsSupportedLanguages",void 0),t([P(Ye,{ignoreUnknown:!1})],W.prototype,"directionsTimeAttribute",void 0),t([r()],W.prototype,"hasZ",void 0),t([P(ee,{ignoreUnknown:!1})],W.prototype,"impedance",void 0),t([r({type:zi})],W.prototype,"networkDataset",void 0),t([r({type:[ct]})],W.prototype,"supportedTravelModes",void 0),W=t([L("esri.rest.support.NetworkServiceDescription")],W);const Ki=W;function Re(e,i,o,s){s[o]=[i.length,i.length+e.length],e.forEach(a=>{i.push(a.geometry)})}function Zi(e,i){for(let o=0;o<i.length;o++){const s=e[i[o]];if(s&&s.length)for(const a of s)a.z=void 0}console.log(`The remote Network Analysis service is powered by a network dataset which is not Z-aware.
Z-coordinates of the input geometry are ignored.`)}function Hi(e,i){for(let o=0;o<i.length;o++){const s=e[i[o]];if(s&&s.length){for(const a of s)if(l(a)&&a.hasZ)return!0}}return!1}async function Gt(e,i,o){if(!e)throw new oe("network-service:missing-url","Url to Network service is missing");const s=Ve({f:"json",token:i},o),{data:a}=await Ae(e,s);a.supportedTravelModes||(a.supportedTravelModes=[]);for(let T=0;T<a.supportedTravelModes.length;T++)a.supportedTravelModes[T].id||(a.supportedTravelModes[T].id=a.supportedTravelModes[T].itemId);const n=a.currentVersion>=10.4?Xi(e,i,o):Yi(e,o),{defaultTravelMode:p,supportedTravelModes:y}=await n;return a.defaultTravelMode=p,a.supportedTravelModes=y,Ki.fromJSON(a)}async function Yi(e,i){var o,s;const a=Ve({f:"json"},i),{data:n}=await Ae(e.replace(/\/rest\/.*$/i,"/info"),a);if(!n||!n.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:p}=n,y=it(p)+"/sharing/rest/portals/self",{data:T}=await Ae(y,a),D=ni("helperServices.routingUtilities.url",T);if(!D)return{supportedTravelModes:[],defaultTravelMode:null};const b=kt(p),I=/\/solve$/i.test(b.path)?"Route":/\/solveclosestfacility$/i.test(b.path)?"ClosestFacility":"ServiceAreas",B=Ve({f:"json",serviceName:I},i),h=it(D)+"/GetTravelModes/execute",m=await Ae(h,B),A=[];let C=null;if(m!=null&&(o=m.data)!=null&&(s=o.results)!=null&&s.length){const f=m.data.results;for(const S of f){var F;if(S.paramName==="supportedTravelModes"){if((F=S.value)!=null&&F.features){for(const{attributes:v}of S.value.features)if(v){const E=JSON.parse(v.TravelMode);A.push(E)}}}else S.paramName==="defaultTravelMode"&&(C=S.value)}}return{supportedTravelModes:A,defaultTravelMode:C}}async function Xi(e,i,o){try{const s=Ve({f:"json",token:i},o),a=it(e)+"/retrieveTravelModes",{data:{supportedTravelModes:n,defaultTravelMode:p}}=await Ae(a,s);return{supportedTravelModes:n,defaultTravelMode:p}}catch(s){throw new oe("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:s})}}function de(e,i){if(O(e))return null;const o={},s=new RegExp(`^${i}`,"i");for(const a of Object.keys(e))if(s.test(a)){const n=a.substring(i.length);o[ee.fromJSON(n)]=e[a]}return o}function yt(e,i,o){if(!O(e)){i.attributes||(i.attributes={});for(const s in e){const a=ee.toJSON(s);i.attributes[`${o}${a}`]=e[s]}}}function Ce(e){const i={};for(const o of Object.keys(e)){const s=o;i[ee.fromJSON(s)]=e[o]}return i}function Ie(e){const i={};for(const o of Object.keys(e)){const s=o;i[ee.toJSON(s)]=e[o]}return i}function Ze(e,i){return O(e)||O(i)?null:Math.round((e-i)/6e4)}function Qi(e){const i=e.toJSON(),o=i;return o.accumulateAttributeNames&&(o.accumulateAttributeNames=i.accumulateAttributeNames.join()),o.attributeParameterValues&&(o.attributeParameterValues=JSON.stringify(i.attributeParameterValues)),o.barriers&&(o.barriers=JSON.stringify(i.barriers)),o.outSR&&(o.outSR=i.outSR.wkid),o.overrides&&(o.overrides=JSON.stringify(i.overrides)),o.polygonBarriers&&(o.polygonBarriers=JSON.stringify(i.polygonBarriers)),o.polylineBarriers&&(o.polylineBarriers=JSON.stringify(i.polylineBarriers)),o.restrictionAttributeNames&&(o.restrictionAttributeNames=i.restrictionAttributeNames.join()),o.stops&&(o.stops=JSON.stringify(i.stops)),o.travelMode&&(o.travelMode=JSON.stringify(i.travelMode)),o}const Ft=new Ut({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let Be=class extends U{constructor(e){super(e),this.description=null,this.type=null}};t([r({type:String,json:{write:!0}})],Be.prototype,"description",void 0),t([r({type:String,json:{read:Ft.read,write:Ft.write}})],Be.prototype,"type",void 0),Be=t([L("esri.rest.support.GPMessage")],Be);const er=Be,jt=new Ut({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let _e=class extends er{constructor(e){super(e),this.type=null}};t([r({type:String,json:{read:jt.read,write:jt.write}})],_e.prototype,"type",void 0),_e=t([L("esri.rest.support.NAMessage")],_e);const tr=_e;let Fe=class extends X{};t([r()],Fe.prototype,"events",void 0),t([r()],Fe.prototype,"strings",void 0),Fe=t([L("esri.rest.support.DirectionsFeature")],Fe);const xt=Fe;let Z=class extends me{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,i){var o;if(!e)return[];const s=(o=i.summary.envelope.spatialReference)!=null?o:i.spatialReference,a=s&&be.fromJSON(s);return e.map(n=>{var p,y;const T=this._decompressGeometry(n.compressedGeometry),D=new De(se(te({},T),{spatialReference:a})),b=(p=(y=n.events)==null?void 0:y.map(I=>{const{arriveTimeUTC:B,ETA:h,point:{x:m,y:A,z:C},strings:F}=I;return new xt({geometry:new He({x:m,y:A,z:C,hasZ:C!==void 0,spatialReference:a}),attributes:{ETA:h,arriveTimeUTC:B},strings:F})}))!=null?p:[];return new xt({attributes:n.attributes,events:b,geometry:D,strings:n.strings})})}get mergedGeometry(){if(!this.features)return null;const e=this.features.map(({geometry:o})=>J(o)),i=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,i)}get strings(){return this.features.map(({strings:e})=>e)}_decompressGeometry(e){let i=0,o=0,s=0,a=0;const n=[];let p,y,T,D,b,I,B,h,m=0,A=0,C=0;if(b=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),b||(b=[]),parseInt(b[m],32)===0){m=2;const F=parseInt(b[m],32);m++,I=parseInt(b[m],32),m++,1&F&&(A=b.indexOf("|")+1,B=parseInt(b[A],32),A++),2&F&&(C=b.indexOf("|",A)+1,h=parseInt(b[C],32),C++)}else I=parseInt(b[m],32),m++;for(;m<b.length&&b[m]!=="|";){p=parseInt(b[m],32)+i,m++,i=p,y=parseInt(b[m],32)+o,m++,o=y;const F=[p/I,y/I];A&&(D=parseInt(b[A],32)+s,A++,s=D,F.push(D/B)),C&&(T=parseInt(b[C],32)+a,C++,a=T,F.push(T/h)),n.push(F)}return{paths:[n],hasZ:A>0,hasM:C>0}}_mergePolylinesToSinglePath(e,i){if(e.length===0)return new De({spatialReference:i});const o=[];for(const p of e)for(const y of p.paths)o.push(...y);const s=[];o.forEach((p,y)=>{y!==0&&p[0]===o[y-1][0]&&p[1]===o[y-1][1]||s.push(p)});const{hasM:a,hasZ:n}=e[0];return new De({hasM:a,hasZ:n,paths:[s],spatialReference:i})}};t([r({type:$t,json:{read:{source:"summary.envelope"}}})],Z.prototype,"extent",void 0),t([r()],Z.prototype,"features",void 0),t([g("features")],Z.prototype,"readFeatures",null),t([r()],Z.prototype,"geometryType",void 0),t([r({readOnly:!0})],Z.prototype,"mergedGeometry",null),t([r()],Z.prototype,"routeId",void 0),t([r()],Z.prototype,"routeName",void 0),t([r({value:null,readOnly:!0})],Z.prototype,"strings",null),t([r({json:{read:{source:"summary.totalDriveTime"}}})],Z.prototype,"totalDriveTime",void 0),t([r({json:{read:{source:"summary.totalLength"}}})],Z.prototype,"totalLength",void 0),t([r({json:{read:{source:"summary.totalTime"}}})],Z.prototype,"totalTime",void 0),Z=t([L("esri.rest.support.DirectionsFeatureSet")],Z);const ir=Z;let re=class extends U{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};t([r({type:me,json:{write:!0}})],re.prototype,"directionLines",void 0),t([r({type:me,json:{write:!0}})],re.prototype,"directionPoints",void 0),t([r({type:ir,json:{write:!0}})],re.prototype,"directions",void 0),t([r({type:X,json:{write:!0}})],re.prototype,"route",void 0),t([r({type:String,json:{write:!0}})],re.prototype,"routeName",void 0),t([r({type:[X],json:{write:!0}})],re.prototype,"stops",void 0),t([r({type:me,json:{write:!0}})],re.prototype,"traversedEdges",void 0),t([r({type:me,json:{write:!0}})],re.prototype,"traversedJunctions",void 0),t([r({type:me,json:{write:!0}})],re.prototype,"traversedTurns",void 0),re=t([L("esri.rest.support.RouteResult")],re);const rr=re;function Qe(e){return e&&me.fromJSON(e).features.map(i=>i)}let le=class extends U{constructor(e){super(e),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,i){return Qe(i.barriers)}readPolylineBarriers(e){return Qe(e)}readPolygonBarriers(e){return Qe(e)}};t([r({type:[tr]})],le.prototype,"messages",void 0),t([r({type:[X]})],le.prototype,"pointBarriers",void 0),t([g("pointBarriers",["barriers"])],le.prototype,"readPointBarriers",null),t([r({type:[X]})],le.prototype,"polylineBarriers",void 0),t([g("polylineBarriers")],le.prototype,"readPolylineBarriers",null),t([r({type:[X]})],le.prototype,"polygonBarriers",void 0),t([g("polygonBarriers")],le.prototype,"readPolygonBarriers",null),t([r({type:[rr]})],le.prototype,"routeResults",void 0),le=t([L("esri.rest.support.RouteSolveResult")],le);const or=le;function Je(e){return(e==null?void 0:e.declaredClass)==="esri.rest.support.FeatureSet"}async function sr(e,i,o){const s=[],a=[],n={},p={},y=kt(e),{path:T}=y;Je(i.stops)&&Re(i.stops.features,a,"stops.features",n),Je(i.pointBarriers)&&Re(i.pointBarriers.features,a,"pointBarriers.features",n),Je(i.polylineBarriers)&&Re(i.polylineBarriers.features,a,"polylineBarriers.features",n),Je(i.polygonBarriers)&&Re(i.polygonBarriers.features,a,"polygonBarriers.features",n);const D=await ui(a);for(const h in n){const m=n[h];s.push(h),p[h]=D.slice(m[0],m[1])}if(Hi(p,s)){let h=null;try{h=await Gt(T,i.apiKey,o)}catch{}h&&!h.hasZ&&Zi(p,s)}for(const h in p)p[h].forEach((m,A)=>{i.get(h)[A].geometry=m});const b=se(te({},o),{query:se(te(te({},y.query),Qi(i)),{f:"json"})}),I=T.endsWith("/solve")?T:`${T}/solve`,{data:B}=await Ae(I,b);return ar(B)}function ar(e){var i;const{barriers:o,directionLines:s,directionPoints:a,directions:n,messages:p,polygonBarriers:y,polylineBarriers:T,routes:D,stops:b,traversedEdges:I,traversedJunctions:B,traversedTurns:h}=e,m=f=>{const S=C.find(E=>E.routeName===f);if(l(S))return S;const v={routeId:C.length+1,routeName:f};return C.push(v),v},A=f=>{const S=C.find(E=>E.routeId===f);if(l(S))return S;const v={routeId:f,routeName:null};return C.push(v),v},C=[];D==null||D.features.forEach((f,S)=>{f.geometry.spatialReference=D.spatialReference;const v=f.attributes.Name,E=S+1;C.push({routeId:E,routeName:v,route:f})}),n==null||n.forEach(f=>{const{routeName:S}=f;m(S).directions=f});const F=(i=b==null?void 0:b.features.every(f=>O(f.attributes.RouteName)))!=null&&i&&C.length>0?C[0].routeName:null;return b==null||b.features.forEach(f=>{f.geometry.spatialReference=b.spatialReference;const S=F!=null?F:f.attributes.RouteName,v=m(S);v.stops!=null||(v.stops=[]),v.stops.push(f)}),s==null||s.features.forEach(f=>{const S=f.attributes.RouteID,v=A(S),{geometryType:E,spatialReference:M}=s;v.directionLines!=null||(v.directionLines={features:[],geometryType:E,spatialReference:M}),v.directionLines.features.push(f)}),a==null||a.features.forEach(f=>{const S=f.attributes.RouteID,v=A(S),{geometryType:E,spatialReference:M}=a;v.directionPoints!=null||(v.directionPoints={features:[],geometryType:E,spatialReference:M}),v.directionPoints.features.push(f)}),I==null||I.features.forEach(f=>{const S=f.attributes.RouteID,v=A(S),{geometryType:E,spatialReference:M}=I;v.traversedEdges!=null||(v.traversedEdges={features:[],geometryType:E,spatialReference:M}),v.traversedEdges.features.push(f)}),B==null||B.features.forEach(f=>{const S=f.attributes.RouteID,v=A(S),{geometryType:E,spatialReference:M}=B;v.traversedJunctions!=null||(v.traversedJunctions={features:[],geometryType:E,spatialReference:M}),v.traversedJunctions.features.push(f)}),h==null||h.features.forEach(f=>{const S=f.attributes.RouteID,v=A(S);v.traversedTurns!=null||(v.traversedTurns={features:[]}),v.traversedTurns.features.push(f)}),or.fromJSON({routeResults:C,barriers:o,polygonBarriers:y,polylineBarriers:T,messages:p})}var rt;let z=rt=class extends ne(U){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null}static fromGraphic(e){var i,o;return new rt({directionLineType:ze.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:(i=e.attributes.FromLevel)!=null?i:null,geometry:e.geometry,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:l(e.symbol)?ge(e.symbol):null,toLevel:(o=e.attributes.ToLevel)!=null?o:null})}toGraphic(){const e={__OBJECTID:J(this.objectId),DirectionLineType:l(this.directionLineType)?ze.toJSON(this.directionLineType):null,DirectionPointID:J(this.directionPointId),Meters:J(this.distance),Minutes:J(this.duration)};return l(this.fromLevel)&&(e.FromLevel=this.fromLevel),l(this.toLevel)&&(e.ToLevel=this.toLevel),new X({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};z.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],z.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:ze.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:ze.read}}})],z.prototype,"directionLineType",void 0),t([r({json:{read:{source:"attributes.DirectionPointID"}}})],z.prototype,"directionPointId",void 0),t([r({json:{read:{source:"attributes.Meters"}}})],z.prototype,"distance",void 0),t([r({json:{read:{source:"attributes.Minutes"}}})],z.prototype,"duration",void 0),t([r({json:{read:{source:"attributes.FromLevel"}}})],z.prototype,"fromLevel",void 0),t([r({type:De})],z.prototype,"geometry",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],z.prototype,"objectId",void 0),t([r({type:fe,json:{read:!1}})],z.prototype,"popupTemplate",void 0),t([r({types:k,json:{read:!1}})],z.prototype,"symbol",void 0),t([r({json:{read:{source:"attributes.ToLevel"}}})],z.prototype,"toLevel",void 0),z=rt=t([L("esri.rest.support.DirectionLine")],z);const je=z;var ot;let j=ot=class extends ne(U){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.voiceInstruction=null}readArrivalTime(e,i){return l(i.attributes.ArrivalTime)?new Date(i.attributes.ArrivalTime):null}static fromGraphic(e){var i,o,s,a,n,p,y,T,D,b,I,B,h;return new ot({alternateName:(i=e.attributes.AlternateName)!=null?i:null,arrivalTime:l(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:(o=e.attributes.ArrivalUTCOffset)!=null?o:null,azimuth:(s=e.attributes.Azimuth)!=null?s:null,branchName:(a=e.attributes.BranchName)!=null?a:null,directionPointType:qe.fromJSON(e.attributes.DirectionPointType),displayText:(n=e.attributes.DisplayText)!=null?n:null,exitName:(p=e.attributes.ExitName)!=null?p:null,geometry:e.geometry,intersectingName:(y=e.attributes.IntersectingName)!=null?y:null,level:(T=e.attributes.Level)!=null?T:null,name:(D=e.attributes.Name)!=null?D:null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:(b=e.attributes.ShortVoiceInstruction)!=null?b:null,stopId:(I=e.attributes.StopID)!=null?I:null,symbol:l(e.symbol)?ge(e.symbol):null,towardName:(B=e.attributes.TowardName)!=null?B:null,voiceInstruction:(h=e.attributes.VoiceInstruction)!=null?h:null})}toGraphic(){const e={__OBJECTID:J(this.objectId),DirectionPointType:l(this.directionPointType)?qe.toJSON(this.directionPointType):null,Sequence:J(this.sequence),StopID:this.stopId};return l(this.alternateName)&&(e.AlternateName=this.alternateName),l(this.arrivalTime)&&(e.ArrivalTime=this.arrivalTime.getTime()),l(this.arrivalTimeOffset)&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),l(this.azimuth)&&(e.Azimuth=this.azimuth),l(this.branchName)&&(e.BranchName=this.branchName),l(this.displayText)&&(e.DisplayText=this.displayText),l(this.exitName)&&(e.ExitName=this.exitName),l(this.intersectingName)&&(e.IntersectingName=this.intersectingName),l(this.level)&&(e.Level=this.level),l(this.name)&&(e.Name=this.name),l(this.shortVoiceInstruction)&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),l(this.towardName)&&(e.TowardName=this.towardName),l(this.voiceInstruction)&&(e.VoiceInstruction=this.voiceInstruction),new X({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};j.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],j.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({json:{read:!1}})],j.prototype,"alternateName",void 0),t([r()],j.prototype,"arrivalTime",void 0),t([g("arrivalTime",["attributes.ArrivalTime"])],j.prototype,"readArrivalTime",null),t([r({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],j.prototype,"arrivalTimeOffset",void 0),t([r({json:{read:{source:"attributes.Azimuth"}}})],j.prototype,"azimuth",void 0),t([r({json:{read:{source:"attributes.BranchName"}}})],j.prototype,"branchName",void 0),t([r({type:qe.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:qe.read}}})],j.prototype,"directionPointType",void 0),t([r({json:{read:{source:"attributes.DisplayText"}}})],j.prototype,"displayText",void 0),t([r({json:{read:{source:"attributes.ExitName"}}})],j.prototype,"exitName",void 0),t([r({type:He})],j.prototype,"geometry",void 0),t([r({json:{read:!1}})],j.prototype,"intersectingName",void 0),t([r({json:{read:!1}})],j.prototype,"level",void 0),t([r({json:{read:{source:"attributes.Name"}}})],j.prototype,"name",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],j.prototype,"objectId",void 0),t([r({type:fe,json:{read:!1}})],j.prototype,"popupTemplate",void 0),t([r({json:{read:{source:"attributes.Sequence"}}})],j.prototype,"sequence",void 0),t([r({json:{read:!1}})],j.prototype,"shortVoiceInstruction",void 0),t([r({json:{read:{source:"attributes.StopID"}}})],j.prototype,"stopId",void 0),t([r({types:k,json:{read:!1}})],j.prototype,"symbol",void 0),t([r({json:{read:{source:"attributes.TowardName"}}})],j.prototype,"towardName",void 0),t([r({json:{read:!1}})],j.prototype,"voiceInstruction",void 0),j=ot=t([L("esri.rest.support.DirectionPoint")],j);const xe=j;var st;let R=st=class extends ne(U){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null}readCosts(e,i){return de(i.attributes,"Attr_")}writeCosts(e,i){yt(e,i,"Attr_")}static fromGraphic(e){var i,o;return new st({addedCost:(i=e.attributes.AddedCost)!=null?i:null,barrierType:l(e.attributes.BarrierType)?Q.fromJSON(e.attributes.BarrierType):null,costs:l(e.attributes.Costs)?Ce(JSON.parse(e.attributes.Costs)):null,curbApproach:l(e.attributes.CurbApproach)?_.fromJSON(e.attributes.CurbApproach):null,fullEdge:l(e.attributes.FullEdge)?Le.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:(o=e.attributes.Name)!=null?o:null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:l(e.attributes.Status)?he.fromJSON(e.attributes.Status):null,symbol:l(e.symbol)?ge(e.symbol):null})}toGraphic(){const e={__OBJECTID:J(this.objectId),AddedCost:this.addedCost,BarrierType:l(this.barrierType)?Q.toJSON(this.barrierType):null,Costs:l(this.costs)?JSON.stringify(Ie(this.costs)):null,CurbApproach:l(this.curbApproach)?_.toJSON(this.curbApproach):null,FullEdge:l(this.fullEdge)?Le.toJSON(this.fullEdge):null,Name:this.name,Status:l(this.status)?he.toJSON(this.status):null};return new X({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};R.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],R.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({json:{read:!1}})],R.prototype,"addedCost",void 0),t([r({type:Q.apiValues,json:{name:"attributes.BarrierType",read:{reader:Q.read},write:{writer:Q.write}}})],R.prototype,"barrierType",void 0),t([r()],R.prototype,"costs",void 0),t([g("costs",["attributes"])],R.prototype,"readCosts",null),t([V("costs")],R.prototype,"writeCosts",null),t([r({type:_.apiValues,json:{read:{source:"attributes.CurbApproach",reader:_.read}}})],R.prototype,"curbApproach",void 0),t([r({type:Le.apiValues,json:{name:"attributes.FullEdge",read:{reader:Le.read},write:{writer:Le.write}}})],R.prototype,"fullEdge",void 0),t([r({type:He,json:{write:!0}})],R.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name"}})],R.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID"}})],R.prototype,"objectId",void 0),t([r({type:fe,json:{read:!1}})],R.prototype,"popupTemplate",void 0),t([r({type:Ge.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:Ge.read}}})],R.prototype,"sideOfEdge",void 0),t([r({json:{read:{source:"attributes.SourceID"}}})],R.prototype,"sourceId",void 0),t([r({json:{read:{source:"attributes.SourceOID"}}})],R.prototype,"sourceOid",void 0),t([r({type:he.apiValues,json:{read:{source:"attributes.Status",reader:he.read}}})],R.prototype,"status",void 0),t([r({types:k,json:{read:!1}})],R.prototype,"symbol",void 0),R=st=t([L("esri.rest.support.PointBarrier")],R);const Se=R;var at;let K=at=class extends ne(U){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null}readCosts(e,i){return de(i.attributes,"Attr_")}writeCosts(e,i){yt(e,i,"Attr_")}static fromGraphic(e){var i,o;return new at({barrierType:l(e.attributes.BarrierType)?Q.fromJSON(e.attributes.BarrierType):null,costs:l(e.attributes.Costs)?Ce(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:(i=e.attributes.Name)!=null?i:null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:(o=e.attributes.ScaleFactor)!=null?o:null,symbol:l(e.symbol)?ge(e.symbol):null})}toGraphic(){var e,i;const o={__OBJECTID:J(this.objectId),BarrierType:l(this.barrierType)?Q.toJSON(this.barrierType):null,Costs:l(this.costs)?JSON.stringify(Ie(this.costs)):null,Name:(e=this.name)!=null?e:null,ScaleFactor:(i=this.scaleFactor)!=null?i:null};return new X({geometry:this.geometry,attributes:o,symbol:this.symbol,popupTemplate:this.popupTemplate})}};K.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],K.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:Q.apiValues,json:{name:"attributes.BarrierType",read:{reader:Q.read},write:{writer:Q.write}}})],K.prototype,"barrierType",void 0),t([r()],K.prototype,"costs",void 0),t([g("costs",["attributes"])],K.prototype,"readCosts",null),t([V("costs")],K.prototype,"writeCosts",null),t([r({type:pi,json:{write:!0}})],K.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name"}})],K.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID"}})],K.prototype,"objectId",void 0),t([r({type:fe,json:{read:!1}})],K.prototype,"popupTemplate",void 0),t([r({json:{read:!1}})],K.prototype,"scaleFactor",void 0),t([r({types:k,json:{read:!1}})],K.prototype,"symbol",void 0),K=at=t([L("esri.rest.support.PolygonBarrier")],K);const we=K;var lt;let H=lt=class extends ne(U){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null}readCosts(e,i){return de(i.attributes,"Attr_")}static fromGraphic(e){var i,o;return new lt({barrierType:l(e.attributes.BarrierType)?Q.fromJSON(e.attributes.BarrierType):null,costs:l(e.attributes.Costs)?Ce(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:(i=e.attributes.Name)!=null?i:null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:(o=e.attributes.ScaleFactor)!=null?o:null,symbol:l(e.symbol)?ge(e.symbol):null})}toGraphic(){const e={__OBJECTID:J(this.objectId),BarrierType:l(this.barrierType)?Q.toJSON(this.barrierType):null,Costs:l(this.costs)?JSON.stringify(Ie(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new X({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};H.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],H.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:Q.apiValues,json:{read:{source:"attributes.BarrierType",reader:Q.read}}})],H.prototype,"barrierType",void 0),t([r()],H.prototype,"costs",void 0),t([g("costs",["attributes"])],H.prototype,"readCosts",null),t([r({type:De,json:{write:!0}})],H.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name"}})],H.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID"}})],H.prototype,"objectId",void 0),t([r({type:fe,json:{read:!1}})],H.prototype,"popupTemplate",void 0),t([r({json:{read:!1}})],H.prototype,"scaleFactor",void 0),t([r({types:k,json:{read:!1}})],H.prototype,"symbol",void 0),H=lt=t([L("esri.rest.support.PolylineBarrier")],H);const Ne=H;let ie=class extends U{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return O(e)?null:e.map(i=>ee.fromJSON(i))}writeAccumulateAttributes(e,i,o){!O(e)&&e.length&&(i[o]=e.map(s=>ee.toJSON(s)))}};t([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],ie.prototype,"accumulateAttributes",void 0),t([g("accumulateAttributes")],ie.prototype,"readAccumulateAttributes",null),t([V("accumulateAttributes")],ie.prototype,"writeAccumulateAttributes",null),t([r({type:String,json:{write:!0}})],ie.prototype,"directionsLanguage",void 0),t([r({type:Boolean,json:{write:!0}})],ie.prototype,"findBestSequence",void 0),t([r({type:Boolean,json:{write:!0}})],ie.prototype,"preserveFirstStop",void 0),t([r({type:Boolean,json:{write:!0}})],ie.prototype,"preserveLastStop",void 0),t([r({type:Boolean,json:{write:!0}})],ie.prototype,"startTimeIsUTC",void 0),t([r({type:Boolean,json:{write:!0}})],ie.prototype,"timeWindowsAreUTC",void 0),t([r({type:ct,json:{write:!0}})],ie.prototype,"travelMode",void 0),ie=t([L("esri.layers.support.RouteSettings")],ie);const qt=ie;var nt;let N=nt=class extends ne(U){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.version="1.0.0"}readEndTime(e,i){return l(i.attributes.EndTimeUTC)?new Date(i.attributes.EndTimeUTC):null}readEndTimeOffset(e,i){return Ze(i.attributes.EndTime,i.attributes.EndTimeUTC)}readStartTime(e,i){return l(i.attributes.StartTimeUTC)?new Date(i.attributes.StartTimeUTC):null}readStartTimeOffset(e,i){return Ze(i.attributes.StartTime,i.attributes.StartTimeUTC)}readTotalCosts(e,i){return de(i.attributes,"Total_")}readTotalViolations(e,i){return de(i.attributes,"TotalViolation_")}readTotalWait(e,i){return de(i.attributes,"TotalWait_")}static fromGraphic(e){var i,o,s,a,n,p;return new nt({analysisSettings:l(e.attributes.AnalysisSettings)?qt.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:l(e.attributes.EndTime)?new Date(e.attributes.EndTime):null,endTimeOffset:(i=e.attributes.EndUTCOffset)!=null?i:null,geometry:e.geometry,messages:l(e.attributes.Messages)?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:l(e.attributes.StartTime)?new Date(e.attributes.StartTime):null,startTimeOffset:(o=e.attributes.StartUTCOffset)!=null?o:null,symbol:l(e.symbol)?ge(e.symbol):null,totalCosts:l(e.attributes.TotalCosts)?Ce(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:(s=e.attributes.TotalMeters)!=null?s:null,totalDuration:(a=e.attributes.TotalMinutes)!=null?a:null,totalLateDuration:(n=e.attributes.TotalLateMinutes)!=null?n:null,totalWaitDuration:(p=e.attributes.TotalWaitMinutes)!=null?p:null,version:e.attributes.Version})}toGraphic(){const e={__OBJECTID:J(this.objectId),AnalysisSettings:l(this.analysisSettings)?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:l(this.endTime)?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:l(this.messages)?JSON.stringify(this.messages):null,RouteName:J(this.name),StartTime:l(this.startTime)?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:l(this.totalCosts)?JSON.stringify(Ie(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:J(this.version)};return new X({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:J(this.popupTemplate)})}};N.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],N.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({json:{read:!1}})],N.prototype,"analysisSettings",void 0),t([r()],N.prototype,"endTime",void 0),t([g("endTime",["attributes.EndTimeUTC"])],N.prototype,"readEndTime",null),t([r()],N.prototype,"endTimeOffset",void 0),t([g("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],N.prototype,"readEndTimeOffset",null),t([r({json:{read:{source:"attributes.FirstStopID"}}})],N.prototype,"firstStopId",void 0),t([r({type:De})],N.prototype,"geometry",void 0),t([r({json:{read:{source:"attributes.LastStopID"}}})],N.prototype,"lastStopId",void 0),t([r({json:{read:!1}})],N.prototype,"messages",void 0),t([r({json:{read:{source:"attributes.Name"}}})],N.prototype,"name",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],N.prototype,"objectId",void 0),t([r({type:fe,json:{read:!1}})],N.prototype,"popupTemplate",void 0),t([r()],N.prototype,"startTime",void 0),t([g("startTime",["attributes.StartTimeUTC"])],N.prototype,"readStartTime",null),t([r()],N.prototype,"startTimeOffset",void 0),t([g("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],N.prototype,"readStartTimeOffset",null),t([r({json:{read:{source:"attributes.StopCount"}}})],N.prototype,"stopCount",void 0),t([r({types:k,json:{read:!1}})],N.prototype,"symbol",void 0),t([r()],N.prototype,"totalCosts",void 0),t([g("totalCosts",["attributes"])],N.prototype,"readTotalCosts",null),t([r({json:{read:!1}})],N.prototype,"totalDistance",void 0),t([r({json:{read:!1}})],N.prototype,"totalDuration",void 0),t([r({json:{read:!1}})],N.prototype,"totalLateDuration",void 0),t([r()],N.prototype,"totalViolations",void 0),t([g("totalViolations",["attributes"])],N.prototype,"readTotalViolations",null),t([r()],N.prototype,"totalWait",void 0),t([g("totalWait",["attributes"])],N.prototype,"readTotalWait",null),t([r({json:{read:!1}})],N.prototype,"totalWaitDuration",void 0),t([r({json:{read:!1}})],N.prototype,"version",void 0),N=nt=t([L("esri.rest.support.RouteInfo")],N);const ke=N,lr={type:String,json:{read:{source:"token"},write:{target:"token"}}};let pe=class extends ne(U){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};t([r({type:Boolean,json:{write:!0}})],pe.prototype,"doNotLocateOnRestrictedElements",void 0),t([r({types:di,json:{read:mi,write:!0}})],pe.prototype,"geometry",void 0),t([P(Vi)],pe.prototype,"geometryType",void 0),t([r({type:String,json:{name:"layerName",write:!0}})],pe.prototype,"name",void 0),t([P(Wi,{name:"spatialRel"})],pe.prototype,"spatialRelationship",void 0),t([r({type:String,json:{write:!0}})],pe.prototype,"type",void 0),t([r({type:String,json:{write:!0}})],pe.prototype,"where",void 0),pe=t([L("esri.rest.support.DataLayer")],pe);const nr=pe;var ut;let We=ut=class extends me{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new ut(te({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements},this.cloneProperties()))}};t([r({type:Boolean,json:{write:!0}})],We.prototype,"doNotLocateOnRestrictedElements",void 0),We=ut=t([L("esri.rest.support.NetworkFeatureSet")],We);const ur=We;let Ee=class extends ne(U){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};t([r({type:Boolean,json:{write:!0}})],Ee.prototype,"doNotLocateOnRestrictedElements",void 0),t([r({type:String,json:{write:!0}})],Ee.prototype,"url",void 0),Ee=t([L("esri.rest.support.NetworkUrl")],Ee);const pr=Ee;var pt;function dr(e){return e&&"type"in e}function mr(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}function cr(e){return e&&"url"in e}function yr(e){return e&&"features"in e}function br(e){return dr(e)?nr.fromJSON(e):cr(e)?pr.fromJSON(e):mr(e)?ur.fromJSON(e):yr(e)?me.fromJSON(e):null}function Ue(e,i,o){l(e)&&(i[o]=Y.isCollection(e)?{features:e.toArray().map(s=>s.toJSON())}:e.toJSON())}let u=pt=class extends ne(U){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return ci(pt,e)}readAccumulateAttributes(e){return O(e)?null:e.map(i=>ee.fromJSON(i))}writeAccumulateAttributes(e,i,o){!O(e)&&e.length&&(i[o]=e.map(s=>ee.toJSON(s)))}writePointBarriers(e,i,o){Ue(e,i,o)}writePolygonBarrier(e,i,o){Ue(e,i,o)}writePolylineBarrier(e,i,o){Ue(e,i,o)}readRestrictionAttributes(e){return O(e)?null:e.map(i=>Ke.fromJSON(i))}writeRestrictionAttributes(e,i,o){!O(e)&&e.length&&(i[o]=e.map(s=>Ke.toJSON(s)))}readStartTime(e,i){const{startTime:o}=i;return O(o)?null:o==="now"?"now":new Date(o)}writeStartTime(e,i){O(e)||(i.startTime=e==="now"?"now":e.getTime())}readStops(e,i){return br(i.stops)}writeStops(e,i,o){Ue(e,i,o)}};t([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],u.prototype,"accumulateAttributes",void 0),t([g("accumulateAttributes")],u.prototype,"readAccumulateAttributes",null),t([V("accumulateAttributes")],u.prototype,"writeAccumulateAttributes",null),t([r(lr)],u.prototype,"apiKey",void 0),t([r({json:{write:!0}})],u.prototype,"attributeParameterValues",void 0),t([r({type:String,json:{write:!0}})],u.prototype,"directionsLanguage",void 0),t([P(mt)],u.prototype,"directionsLengthUnits",void 0),t([P(Ji)],u.prototype,"directionsOutputType",void 0),t([P($i)],u.prototype,"directionsStyleName",void 0),t([P(Ye,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],u.prototype,"directionsTimeAttribute",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"findBestSequence",void 0),t([r({type:Number,json:{write:!0}})],u.prototype,"geometryPrecision",void 0),t([r({type:Number,json:{write:!0}})],u.prototype,"geometryPrecisionM",void 0),t([r({type:Number,json:{write:!0}})],u.prototype,"geometryPrecisionZ",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"ignoreInvalidLocations",void 0),t([P(ee,{name:"impedanceAttributeName",ignoreUnknown:!1})],u.prototype,"impedanceAttribute",void 0),t([r({type:Number,json:{write:!0}})],u.prototype,"outputGeometryPrecision",void 0),t([P(Wt)],u.prototype,"outputGeometryPrecisionUnits",void 0),t([P(ki)],u.prototype,"outputLines",void 0),t([r({type:be,json:{name:"outSR",write:!0}})],u.prototype,"outSpatialReference",void 0),t([r({json:{write:!0}})],u.prototype,"overrides",void 0),t([r({json:{name:"barriers",write:!0}})],u.prototype,"pointBarriers",void 0),t([V("pointBarriers")],u.prototype,"writePointBarriers",null),t([r({json:{write:!0}})],u.prototype,"polygonBarriers",void 0),t([V("polygonBarriers")],u.prototype,"writePolygonBarrier",null),t([r({json:{write:!0}})],u.prototype,"polylineBarriers",void 0),t([V("polylineBarriers")],u.prototype,"writePolylineBarrier",null),t([r({type:Boolean,json:{write:!0}})],u.prototype,"preserveFirstStop",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"preserveLastStop",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"preserveObjectID",void 0),t([r({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],u.prototype,"restrictionAttributes",void 0),t([g("restrictionAttributes")],u.prototype,"readRestrictionAttributes",null),t([V("restrictionAttributes")],u.prototype,"writeRestrictionAttributes",null),t([P(Vt)],u.prototype,"restrictUTurns",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnBarriers",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnDirections",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnPolygonBarriers",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnPolylineBarriers",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnRoutes",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnStops",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedEdges",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedJunctions",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedTurns",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"returnZ",void 0),t([r({type:Date,json:{type:Number,write:!0}})],u.prototype,"startTime",void 0),t([g("startTime")],u.prototype,"readStartTime",null),t([V("startTime")],u.prototype,"writeStartTime",null),t([r({type:Boolean,json:{write:!0}})],u.prototype,"startTimeIsUTC",void 0),t([r({json:{write:!0}})],u.prototype,"stops",void 0),t([g("stops")],u.prototype,"readStops",null),t([V("stops")],u.prototype,"writeStops",null),t([r({type:Boolean,json:{write:!0}})],u.prototype,"timeWindowsAreUTC",void 0),t([r({type:ct,json:{write:!0}})],u.prototype,"travelMode",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"useHierarchy",void 0),t([r({type:Boolean,json:{write:!0}})],u.prototype,"useTimeWindows",void 0),u=pt=t([L("esri.rest.support.RouteParameters")],u);const Et=u;var dt;let d=dt=class extends ne(U){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,i){return Ze(i.attributes.ArriveTime,i.attributes.ArriveTimeUTC)}readCumulativeCosts(e,i){return de(i.attributes,"Cumul_")}readDepartTimeOffset(e,i){return Ze(i.attributes.DepartTime,i.attributes.DepartTimeUTC)}readServiceCosts(e,i){return de(i.attributes,"Attr_")}writeServiceCosts(e,i){yt(e,i,"Attr_")}writeTimeWindowEnd(e,i){O(e)||(i.attributes||(i.attributes={}),i.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,i){O(e)||(i.attributes||(i.attributes={}),i.attributes.TimeWindowStart=e.getTime())}readViolations(e,i){return de(i.attributes,"Violation_")}readWait(e,i){return de(i.attributes,"Wait_")}static fromGraphic(e){var i,o,s,a,n,p,y,T,D,b;return new dt({arriveCurbApproach:l(e.attributes.ArrivalCurbApproach)?_.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:l(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:l(e.attributes.CumulativeCosts)?Ce(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:(i=e.attributes.CumulativeMeters)!=null?i:null,cumulativeDuration:(o=e.attributes.CumulativeMinutes)!=null?o:null,curbApproach:l(e.attributes.CurbApproach)?_.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:l(e.attributes.DepartureCurbApproach)?_.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:l(e.attributes.DepartureTime)?new Date(e.attributes.DepartureTime):null,departTimeOffset:(s=e.attributes.DepartureUTCOffset)!=null?s:null,geometry:e.geometry,lateDuration:(a=e.attributes.LateMinutes)!=null?a:null,locationType:l(e.attributes.LocationType)?Me.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:(n=e.attributes.Sequence)!=null?n:null,serviceCosts:l(e.attributes.ServiceCosts)?Ce(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:(p=e.attributes.ServiceMeters)!=null?p:null,serviceDuration:(y=e.attributes.ServiceMinutes)!=null?y:null,status:l(e.attributes.Status)?he.fromJSON(e.attributes.Status):null,symbol:l(e.symbol)?ge(e.symbol):null,timeWindowEnd:l(e.attributes.TimeWindowEnd)?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:(T=e.attributes.TimeWindowEndUTCOffset)!=null?T:null,timeWindowStart:l(e.attributes.TimeWindowStart)?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:(D=e.attributes.TimeWindowStartUTCOffset)!=null?D:null,waitDuration:(b=e.attributes.WaitMinutes)!=null?b:null})}toGraphic(){var e,i;const o={__OBJECTID:J(this.objectId),ArrivalCurbApproach:l(this.arriveCurbApproach)?_.toJSON(this.arriveCurbApproach):null,ArrivalTime:l(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:l(this.cumulativeCosts)?JSON.stringify(Ie(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:l(this.curbApproach)?_.toJSON(this.curbApproach):null,DepartureCurbApproach:l(this.departCurbApproach)?_.toJSON(this.departCurbApproach):null,DepartureTime:l(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:l(this.locationType)?Me.toJSON(this.locationType):null,Name:J(this.name),RouteName:J(this.routeName),Sequence:this.sequence,ServiceCosts:l(this.serviceCosts)?JSON.stringify(Ie(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:l(this.status)?he.toJSON(this.status):null,TimeWindowEnd:l(this.timeWindowEnd)?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:(e=this.timeWindowEndOffset)!=null?e:this.arriveTimeOffset,TimeWindowStart:l(this.timeWindowStart)?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:(i=this.timeWindowEndOffset)!=null?i:this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new X({geometry:this.geometry,attributes:o,symbol:this.symbol,popupTemplate:this.popupTemplate})}};d.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],d.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:_.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:_.read}}})],d.prototype,"arriveCurbApproach",void 0),t([r({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],d.prototype,"arriveTime",void 0),t([r()],d.prototype,"arriveTimeOffset",void 0),t([g("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],d.prototype,"readArriveTimeOffset",null),t([r({json:{name:"attributes.Bearing",read:!1,write:!0}})],d.prototype,"bearing",void 0),t([r({json:{name:"attributes.BearingTol",read:!1,write:!0}})],d.prototype,"bearingTol",void 0),t([r()],d.prototype,"cumulativeCosts",void 0),t([g("cumulativeCosts",["attributes"])],d.prototype,"readCumulativeCosts",null),t([r({json:{read:!1}})],d.prototype,"cumulativeDistance",void 0),t([r({json:{read:!1}})],d.prototype,"cumulativeDuration",void 0),t([r({type:_.apiValues,json:{name:"attributes.CurbApproach",read:{reader:_.read},write:{writer:_.write}}})],d.prototype,"curbApproach",void 0),t([r({type:_.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:_.read}}})],d.prototype,"departCurbApproach",void 0),t([r({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],d.prototype,"departTime",void 0),t([r()],d.prototype,"departTimeOffset",void 0),t([g("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],d.prototype,"readDepartTimeOffset",null),t([r({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],d.prototype,"distanceToNetworkInMeters",void 0),t([r({type:He,json:{write:!0}})],d.prototype,"geometry",void 0),t([r({json:{name:"attributes.LateMinutes",read:!1}})],d.prototype,"lateDuration",void 0),t([r({type:Me.apiValues,json:{name:"attributes.LocationType",read:{reader:Me.read},write:{writer:Me.write}}})],d.prototype,"locationType",void 0),t([r({json:{name:"attributes.Name"}})],d.prototype,"name",void 0),t([r({json:{read:{source:"attributes.NavLatency"}}})],d.prototype,"navLatency",void 0),t([r({json:{name:"attributes.ObjectID"}})],d.prototype,"objectId",void 0),t([r({type:fe,json:{read:!1}})],d.prototype,"popupTemplate",void 0),t([r({json:{read:{source:"attributes.PosAlong"}}})],d.prototype,"posAlong",void 0),t([r({json:{name:"attributes.RouteName"}})],d.prototype,"routeName",void 0),t([r()],d.prototype,"serviceCosts",void 0),t([g("serviceCosts",["attributes"])],d.prototype,"readServiceCosts",null),t([V("serviceCosts")],d.prototype,"writeServiceCosts",null),t([r({json:{read:!1}})],d.prototype,"serviceDistance",void 0),t([r({json:{read:!1}})],d.prototype,"serviceDuration",void 0),t([r({json:{name:"attributes.Sequence"}})],d.prototype,"sequence",void 0),t([r({type:Ge.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:Ge.read}}})],d.prototype,"sideOfEdge",void 0),t([r({json:{read:{source:"attributes.SnapX"}}})],d.prototype,"snapX",void 0),t([r({json:{read:{source:"attributes.SnapY"}}})],d.prototype,"snapY",void 0),t([r({json:{read:{source:"attributes.SnapZ"}}})],d.prototype,"snapZ",void 0),t([r({json:{read:{source:"attributes.SourceID"}}})],d.prototype,"sourceId",void 0),t([r({json:{read:{source:"attributes.SourceOID"}}})],d.prototype,"sourceOid",void 0),t([r({type:he.apiValues,json:{read:{source:"attributes.Status",reader:he.read}}})],d.prototype,"status",void 0),t([r({types:k,json:{read:!1}})],d.prototype,"symbol",void 0),t([r({type:Date,json:{name:"attributes.TimeWindowEnd"}})],d.prototype,"timeWindowEnd",void 0),t([V("timeWindowEnd")],d.prototype,"writeTimeWindowEnd",null),t([r({json:{read:!1}})],d.prototype,"timeWindowEndOffset",void 0),t([r({type:Date,json:{name:"attributes.TimeWindowStart"}})],d.prototype,"timeWindowStart",void 0),t([V("timeWindowStart")],d.prototype,"writeTimeWindowStart",null),t([r({json:{read:!1}})],d.prototype,"timeWindowStartOffset",void 0),t([r()],d.prototype,"violations",void 0),t([g("violations",["attributes"])],d.prototype,"readViolations",null),t([r({json:{read:!1}})],d.prototype,"waitDuration",void 0),t([r()],d.prototype,"wait",void 0),t([g("wait",["attributes"])],d.prototype,"readWait",null),d=dt=t([L("esri.rest.support.Stop")],d);const Oe=d;function et(e){return e.length?e:null}function zt(e){const{defaultTravelMode:i,supportedTravelModes:o}=e;return o.find(s=>s.id===i)}function $e(e){return"layers"in e}function hr(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function fr(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function vr(e,i,o){var s,a,n,p,y,T,D,b,I,B,h;const m=i.networkDataset.networkAttributes.filter(c=>c.usageType==="cost"),A=zt(i),C=(s=o.travelMode)!=null?s:A;if(O(C))return void Kt.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:F,distanceAttributeName:f}=C,S=m.find(c=>c.name===F),v=m.find(c=>c.name===f),E=(a=(n=(p=J(o.travelMode))==null?void 0:p.impedanceAttributeName)!=null?n:J(o.impedanceAttribute))!=null?a:i.impedance,M=Ri.fromJSON(S==null?void 0:S.units),Pe=mt.fromJSON(v==null?void 0:v.units);if(!M||!Pe)throw new oe("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const Zt=(y=o.directionsLanguage)!=null?y:i.directionsLanguage,bt=(T=(D=J(o.accumulateAttributes))!=null?D:i.accumulateAttributeNames)!=null?T:[],Ht=new Set(m.filter(({name:c})=>c===F||c===f||c===E||bt.includes(c)).map(({name:c})=>c)),ue=c=>{for(const At in c)Ht.has(At)||delete c[At]};for(const c of e.pointBarriers){var ht;l(c.costs)&&(c.addedCost=(ht=c.costs[E])!=null?ht:0,ue(c.costs))}for(const c of e.polygonBarriers){var ft;l(c.costs)&&(c.scaleFactor=(ft=c.costs[E])!=null?ft:1,ue(c.costs))}for(const c of e.polylineBarriers){var vt;l(c.costs)&&(c.scaleFactor=(vt=c.costs[E])!=null?vt:1,ue(c.costs))}const{routeInfo:G}=e,{findBestSequence:Yt,preserveFirstStop:Xt,preserveLastStop:Qt,startTimeIsUTC:ei,timeWindowsAreUTC:ti}=o;G.analysisSettings=new qt({accumulateAttributes:bt,directionsLanguage:Zt,findBestSequence:Yt,preserveFirstStop:Xt,preserveLastStop:Qt,startTimeIsUTC:ei,timeWindowsAreUTC:ti,travelMode:C}),G.totalDuration=ve((b=G.totalCosts[F])!=null?b:0,M),G.totalDistance=tt((I=G.totalCosts[f])!=null?I:0,Pe),G.totalLateDuration=ve((B=G.totalViolations[F])!=null?B:0,M),G.totalWaitDuration=ve((h=G.totalWait[F])!=null?h:0,M),l(G.totalCosts)&&ue(G.totalCosts),l(G.totalViolations)&&ue(G.totalViolations),l(G.totalWait)&&ue(G.totalWait);for(const c of e.stops){var Tt,gt,St,wt,Nt,Ot;l(c.serviceCosts)&&(c.serviceDuration=ve((Tt=c.serviceCosts[F])!=null?Tt:0,M),c.serviceDistance=tt((gt=c.serviceCosts[f])!=null?gt:0,Pe),ue(c.serviceCosts)),l(c.cumulativeCosts)&&(c.cumulativeDuration=ve((St=c.cumulativeCosts[F])!=null?St:0,M),c.cumulativeDistance=tt((wt=c.cumulativeCosts[f])!=null?wt:0,Pe),ue(c.cumulativeCosts)),l(c.violations)&&(c.lateDuration=ve((Nt=c.violations[F])!=null?Nt:0,M),ue(c.violations)),l(c.wait)&&(c.waitDuration=ve((Ot=c.wait[F])!=null?Ot:0,M),ue(c.wait))}}async function Mt(e){const i=be.WGS84;return await Ei(e.spatialReference,i),Mi(e,i)}function ve(e,i){switch(i){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function tt(e,i){return i==="decimal-degrees"||i==="points"||i==="unknown"?e:xi(e,i,"meters")}function Te(e){const{attributes:i,geometry:o,popupTemplate:s,symbol:a}=e.toGraphic().toJSON();return{attributes:i,geometry:o,popupInfo:s,symbol:a}}const Tr=Y.ofType(je),gr=Y.ofType(xe),Lt=Y.ofType(Se),Pt=Y.ofType(we),Rt=Y.ofType(Ne),Jt=Y.ofType(Oe),Kt=yi.getLogger("esri.layers.RouteLayer");let w=class extends bi(hi(fi(vi(Ti(gi(Si)))))){constructor(...e){super(...e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new _t,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new Lt,this.polygonBarriers=new Pt,this.polylineBarriers=new Rt,this.routeInfo=null,this.spatialReference=be.WGS84,this.stops=new Jt,this.type="route",this.handles.add(wi(()=>this.stops.toArray(),()=>{O(this.routeInfo)&&this._setStopSymbol(this.stops)},{sync:!0}))}writeFeatureCollectionWebmap(e,i,o,s){const a=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(y=>!!y),n=a.map((y,T)=>T),p=s.origin==="web-map"?"featureCollection.layers":"layers";Ni(p,a,i),i.opacity=this.opacity,i.visibility=this.visible,i.visibleLayers=n}readDirectionLines(e,i){return this._getNetworkFeatures(i,"DirectionLines",o=>je.fromGraphic(o))}readDirectionPoints(e,i){return this._getNetworkFeatures(i,"DirectionPoints",o=>xe.fromGraphic(o))}get fullExtent(){if(l(this.routeInfo)&&l(this.routeInfo.geometry))return this.routeInfo.geometry.extent;const e=new $t({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:be.WGS84}),i=this.stops.filter(a=>l(a.geometry));if(i.length<2)return e;const{spatialReference:o}=i.getItemAt(0).geometry;if(O(o))return e;const s=i.toArray().map(a=>{const n=a.geometry;return[n.x,n.y]});return new Oi({points:s,spatialReference:o}).extent}readMaxScale(e,i){var o;const s=($e(i)?i.layers:i.featureCollection.layers).find(a=>l(a.layerDefinition.maxScale));return(o=s==null?void 0:s.layerDefinition.maxScale)!=null?o:0}readMinScale(e,i){var o;const s=($e(i)?i.layers:i.featureCollection.layers).find(a=>l(a.layerDefinition.minScale));return(o=s==null?void 0:s.layerDefinition.minScale)!=null?o:0}readPointBarriers(e,i){return this._getNetworkFeatures(i,"Barriers",o=>Se.fromGraphic(o))}readPolygonBarriers(e,i){return this._getNetworkFeatures(i,"PolygonBarriers",o=>we.fromGraphic(o))}readPolylineBarriers(e,i){return this._getNetworkFeatures(i,"PolylineBarriers",o=>Ne.fromGraphic(o))}readRouteInfo(e,i){const o=this._getNetworkFeatures(i,"RouteInfo",s=>ke.fromGraphic(s));return o.length>0?o.getItemAt(0):null}readSpatialReference(e,i){var o,s;const a=$e(i)?i.layers:i.featureCollection.layers;if(!a.length)return be.WGS84;const{layerDefinition:n}=a[0],p=(o=(s=n.spatialReference)!=null?s:n.extent.spatialReference)!=null?o:Ai;return be.fromJSON(p)}readStops(e,i){return this._getNetworkFeatures(i,"Stops",o=>Oe.fromGraphic(o),o=>this._setStopSymbol(o))}get title(){return l(this.routeInfo)&&l(this.routeInfo.name)?this.routeInfo.name:"Route"}set title(e){e?this._override("title",e):this._clearOverride("title")}get url(){return It.routeServiceUrl}set url(e){e!=null?this._set("url",Di(e,Kt)):this._set("url",It.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){l(this.directionLines)&&(this.directionLines.removeAll(),this._set("directionLines",null)),l(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),l(this.routeInfo)&&this._set("routeInfo",null),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}async save(){await this.load();const{fullExtent:e,portalItem:i}=this;if(!i)throw new oe("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!i.id)throw new oe("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(i.type!=="Feature Collection")throw new oe("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(O(this.routeInfo))throw new oe("routelayer:route-unsolved","save() requires a solved route");const{portal:o}=i;if(await o._signIn(),o.user||await i.reload(),o.user.username!==i.owner)throw new oe("routelayer:not-portal-item-owner","You can only overwrite your portal items");const{itemUrl:s}=i,a={messages:[],origin:"portal-item",portal:o,url:s&&Ci(s),writtenProperties:[]},n=this.write(null,a);return i.extent=await Mt(e),i.title=this.title,await i.update({data:n}),i}async saveAs(e,i={}){if(await this.load(),O(this.routeInfo))throw new oe("routelayer:route-unsolved","saveAs() requires a solved route");const o=Ii.from(e).clone();o.extent!=null||(o.extent=await Mt(this.fullExtent)),o.id=null,o.portal!=null||(o.portal=Bi.getDefault()),o.title!=null||(o.title=this.title),o.type="Feature Collection",o.typeKeywords=["Data","Feature Collection",Pi.MULTI_LAYER,"Route Layer"];const{portal:s}=o,a={messages:[],origin:"portal-item",portal:s,url:null,writtenProperties:[]};await s._signIn();const n=i==null?void 0:i.folder,p=this.write(null,a);return await s.user.addItem({item:o,folder:n,data:p}),this.portalItem=o,Li(a),a.portalItem=o,o}async solve(e,i){var o,s,a,n,p;const y=(o=e==null?void 0:e.stops)!=null?o:this.stops,T=(s=e==null?void 0:e.pointBarriers)!=null?s:et(this.pointBarriers),D=(a=e==null?void 0:e.polylineBarriers)!=null?a:et(this.polylineBarriers),b=(n=e==null?void 0:e.polygonBarriers)!=null?n:et(this.polygonBarriers);if(O(y))throw new oe("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((hr(y)||fr(y))&&y.features.length<2||Y.isCollection(y)&&y.length<2)throw new oe("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");const I=e==null?void 0:e.apiKey,B=this.url,h=await this._getServiceDescription(B,I,i),m=zt(h),A=(p=e==null?void 0:e.travelMode)!=null?p:m,C=Bt(e==null?void 0:e.accumulateAttributes,[]);l(A)&&C.push(A.distanceAttributeName);const F={startTime:new Date},f={accumulateAttributes:C,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:T,polylineBarriers:D,polygonBarriers:b,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!T,returnDirections:!0,returnPolygonBarriers:!!b,returnPolylineBarriers:!!D,returnRoutes:!0,returnStops:!0,stops:y},S=e?Et.from(e):new Et;for(const M in F)S[M]==null&&(S[M]=F[M]);let v;S.set(f);try{v=await sr(B,S,i)}catch(M){throw Fi(M)?M:new oe("routelayer:failed-route-request","the routing request failed",{error:M})}const E=this._toRouteLayerSolution(v);return this._isOverridden("title")||(this.title=Bt(E.routeInfo.name,"Route")),vr(E,h,S),E}update(e){const{stops:i,directionLines:o,directionPoints:s,pointBarriers:a,polylineBarriers:n,polygonBarriers:p,routeInfo:y}=e;this.set({stops:i,pointBarriers:a,polylineBarriers:n,polygonBarriers:p}),this._set("directionLines",o),this._set("directionPoints",s),this._set("routeInfo",y)}_getLayerDefinition(){return{capabilities:"Query,Update,Editing",extent:this.fullExtent.toJSON(),hasM:!1,hasZ:!1,maxScale:this.maxScale,minScale:this.minScale,objectIdField:"__OBJECTID",spatialReference:this.spatialReference.toJSON(),type:"Feature Layer",typeIdField:""}}_getNetworkFeatures(e,i,o,s){const a=($e(e)?e.layers:e.featureCollection.layers).find(B=>B.layerDefinition.name===i);if(O(a))return new Y;const{layerDefinition:n,popupInfo:p,featureSet:y}=a,T=n.drawingInfo.renderer,{features:D}=y,b=T&&ji(T),I=D.map(B=>{var h;const m=X.fromJSON(B),A=o(m);return A.symbol!=null||(A.symbol=(h=b==null?void 0:b.getSymbol(m))!=null?h:this._getNetworkSymbol(i)),A.popupTemplate!=null||(A.popupTemplate=p&&fe.fromJSON(p)),A});return s&&I.some(B=>!B.symbol)&&s(I),new Y(I)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,i,o){if(l(this._cachedServiceDescription)&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const s=await Gt(e,i,o);return this._cachedServiceDescription={serviceDescription:s,url:e},s}_setStopSymbol(e){if(!e||e.length===0)return;if(O(this.routeInfo)||e.length===1)return void e.forEach((a,n)=>{switch(n){case 0:a.symbol=this.defaultSymbols.firstStop;break;case e.length-1:a.symbol=this.defaultSymbols.lastStop;break;default:a.symbol=this.defaultSymbols.middleStop}});const i=e.map(a=>a.sequence).filter(a=>l(a)),o=Math.min(...i),s=Math.max(...i);for(const a of e)a.sequence!==o?a.sequence!==s?a.status==="ok"||a.status==="not-located-on-closest"?a.locationType!=="waypoint"?a.locationType!=="break"?a.symbol=this.defaultSymbols.middleStop:a.symbol=this.defaultSymbols.breakStop:a.symbol=this.defaultSymbols.waypointStop:a.symbol=this.defaultSymbols.invalidStop:a.symbol=this.defaultSymbols.lastStop:a.symbol=this.defaultSymbols.firstStop}_toRouteLayerSolution(e){var i,o,s,a,n;const p=e.routeResults[0].stops.map(h=>Oe.fromJSON(h.toJSON()));this._setStopSymbol(p);const y=new Jt(p),T=new Pt((i=e.polygonBarriers)==null?void 0:i.map(h=>{const m=we.fromJSON(h.toJSON());return m.symbol=this.defaultSymbols.polygonBarriers,m})),D=new Rt((o=e.polylineBarriers)==null?void 0:o.map(h=>{const m=Ne.fromJSON(h.toJSON());return m.symbol=this.defaultSymbols.polylineBarriers,m})),b=new Lt((s=e.pointBarriers)==null?void 0:s.map(h=>{const m=Se.fromJSON(h.toJSON());return m.symbol=this.defaultSymbols.pointBarriers,m})),I=ke.fromJSON(e.routeResults[0].route.toJSON());I.symbol=this.defaultSymbols.routeInfo;const B=new gr((a=e.routeResults[0].directionPoints)==null?void 0:a.features.map(h=>{const m=xe.fromJSON(h.toJSON());return m.symbol=this.defaultSymbols.directionPoints,m}));return{directionLines:new Tr((n=e.routeResults[0].directionLines)==null?void 0:n.features.map(h=>{const m=je.fromJSON(h.toJSON());return m.symbol=this.defaultSymbols.directionLines,m})),directionPoints:B,pointBarriers:b,polygonBarriers:T,polylineBarriers:D,routeInfo:I,stops:y}}_writeDirectionLines(){return O(this.directionLines)||!this.directionLines.length?null:{featureSet:{features:this.directionLines.toArray().map(e=>Te(e)),geometryType:"esriGeometryPolyline"},layerDefinition:se(te({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionLines.toJSON()}},fields:je.fields,geometryType:"esriGeometryPolyline",name:"DirectionLines",title:"Direction Lines"}),popupInfo:je.popupInfo}}_writeDirectionPoints(){return O(this.directionPoints)||!this.directionPoints.length?null:{featureSet:{features:this.directionPoints.toArray().map(e=>Te(e)),geometryType:"esriGeometryPoint"},layerDefinition:se(te({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionPoints.toJSON()}},fields:xe.fields,geometryType:"esriGeometryPoint",name:"DirectionPoints",title:"Direction Points"}),popupInfo:xe.popupInfo}}_writePointBarriers(){return O(this.pointBarriers)||!this.pointBarriers.length?null:{featureSet:{features:this.pointBarriers.toArray().map(e=>Te(e)),geometryType:"esriGeometryPoint"},layerDefinition:se(te({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.pointBarriers.toJSON()}},fields:Se.fields,geometryType:"esriGeometryPoint",name:"Barrier",title:"Point Barrier"}),popupInfo:Se.popupInfo}}_writePolygonBarriers(){return O(this.polygonBarriers)||!this.polygonBarriers.length?null:{featureSet:{features:this.polygonBarriers.toArray().map(e=>Te(e)),geometryType:"esriGeometryPolygon"},layerDefinition:se(te({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polygonBarriers.toJSON()}},fields:we.fields,geometryType:"esriGeometryPolygon",name:"PolygonBarriers",title:"Polygon Barriers"}),popupInfo:we.popupInfo}}_writePolylineBarriers(){return O(this.polylineBarriers)||!this.polylineBarriers.length?null:{featureSet:{features:this.polylineBarriers.toArray().map(e=>Te(e)),geometryType:"esriGeometryPolyline"},layerDefinition:se(te({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polylineBarriers.toJSON()}},fields:Ne.fields,geometryType:"esriGeometryPolyline",name:"PolylineBarriers",title:"Line Barriers"}),popupInfo:Ne.popupInfo}}_writeRouteInfo(){return O(this.routeInfo)?null:{featureSet:{features:[Te(this.routeInfo)],geometryType:"esriGeometryPolyline"},layerDefinition:se(te({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.routeInfo.toJSON()}},fields:ke.fields,geometryType:"esriGeometryPolyline",name:"RouteInfo",title:"Route Details"}),popupInfo:ke.popupInfo}}_writeStops(){return O(this.stops)||!this.stops.length?null:{featureSet:{features:this.stops.toArray().map(e=>Te(e)),geometryType:"esriGeometryPoint"},layerDefinition:se(te({},this._getLayerDefinition()),{drawingInfo:{renderer:{type:"uniqueValue",field1:"Sequence",defaultSymbol:this.defaultSymbols.middleStop.toJSON(),uniqueValueInfos:[{value:"1",symbol:this.defaultSymbols.firstStop.toJSON(),label:"First Stop"},{value:`${this.stops.length}`,symbol:this.defaultSymbols.lastStop.toJSON(),label:"Last Stop"}]}},fields:Oe.fields,geometryType:"esriGeometryPoint",name:"Stops",title:"Stops"}),popupInfo:Oe.popupInfo}}};t([r({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],w.prototype,"_featureCollection",void 0),t([V(["web-map","portal-item"],"_featureCollection")],w.prototype,"writeFeatureCollectionWebmap",null),t([r({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],w.prototype,"_type",void 0),t([r({nonNullable:!0,type:_t})],w.prototype,"defaultSymbols",void 0),t([r({readOnly:!0})],w.prototype,"directionLines",void 0),t([g(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],w.prototype,"readDirectionLines",null),t([r({readOnly:!0})],w.prototype,"directionPoints",void 0),t([g(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],w.prototype,"readDirectionPoints",null),t([r({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],w.prototype,"featureCollectionType",void 0),t([r({readOnly:!0})],w.prototype,"fullExtent",null),t([r({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],w.prototype,"legendEnabled",void 0),t([r({type:["show","hide"]})],w.prototype,"listMode",void 0),t([r({type:Number,nonNullable:!0,json:{write:!1}})],w.prototype,"maxScale",void 0),t([g(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],w.prototype,"readMaxScale",null),t([r({type:Number,nonNullable:!0,json:{write:!1}})],w.prototype,"minScale",void 0),t([g(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],w.prototype,"readMinScale",null),t([r({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],w.prototype,"operationalLayerType",void 0),t([r({nonNullable:!0,type:Y.ofType(Se)})],w.prototype,"pointBarriers",void 0),t([g(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],w.prototype,"readPointBarriers",null),t([r({nonNullable:!0,type:Y.ofType(we)})],w.prototype,"polygonBarriers",void 0),t([g(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],w.prototype,"readPolygonBarriers",null),t([r({nonNullable:!0,type:Y.ofType(Ne)})],w.prototype,"polylineBarriers",void 0),t([g(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],w.prototype,"readPolylineBarriers",null),t([r({readOnly:!0})],w.prototype,"routeInfo",void 0),t([g(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],w.prototype,"readRouteInfo",null),t([r({type:be})],w.prototype,"spatialReference",void 0),t([g(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],w.prototype,"readSpatialReference",null),t([r({nonNullable:!0,type:Y.ofType(Oe)})],w.prototype,"stops",void 0),t([g(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],w.prototype,"readStops",null),t([r()],w.prototype,"title",null),t([r({readOnly:!0,json:{read:!1}})],w.prototype,"type",void 0),t([r()],w.prototype,"url",null),w=t([L("esri.layers.RouteLayer")],w);const Dr=w;export{Dr as default};
