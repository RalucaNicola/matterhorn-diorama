import{dC as d,dD as V,q as c,U as A,r as e,I as h,dE as _,b as p,dF as u,t as v,dm as f,e as t,d as l,n as T}from"./index.25dca4c3.js";const w="analysis-view-handles";let i=class extends d(V){constructor(s){super(s),this.type="analysis-3d",this._analysisModules={"line-of-sight":null}}initialize(){this.handles.add(c(()=>this.layer.analysis,s=>{this._destroyAnalysisView(),e(s)&&this._createAnalysisView(s)},A),w)}destroy(){this.handles.remove(w),this._destroyAnalysisView()}async whenAnalysisView(){if(e(this.analysisView))return this.analysisView;if(e(this._createAnalysisViewTask))return this._createAnalysisViewTask.promise;throw new h("layerview:no-analysisview-for-analysis","The analysis has not been set on the AnalysisLayer of this layer view")}isUpdating(){return e(this._createAnalysisViewTask)||e(this.analysisView)&&this.analysisView.updating}_createAnalysisView(s){const n=_(async a=>(this.analysisView=await this._createAnalysisViewPromise(s,a),this._createAnalysisViewTask===n&&(this._createAnalysisViewTask=null),this.analysisView));this._createAnalysisViewTask=n}_destroyAnalysisView(){this.analysisView=p(this.analysisView),this._createAnalysisViewTask=u(this._createAnalysisViewTask)}async _createAnalysisViewPromise(s,n){const a=s.type;let y=this._analysisModules[a];if(v(y)){const o=await this._loadAnalysisModule(a);this._analysisModules[a]=o,y=o}const r=new y.default({analysis:s,view:this.view,parent:this});if(await r.when(),f(n))throw r.destroy(),new h("layerview:no-analysisview-for-analysis","The analysis has not been added to the AnalysisLayer of this layer view",{analysis:s});return r}_loadAnalysisModule(s){return s==="line-of-sight"?import("./LineOfSightAnalysisView3D.13fe3bb6.js"):null}};t([l()],i.prototype,"type",void 0),t([l()],i.prototype,"layer",void 0),t([l()],i.prototype,"analysisView",void 0),t([l()],i.prototype,"_createAnalysisViewTask",void 0),i=t([T("esri.views.3d.layers.AnalysisLayerView3D")],i);const m=i;export{m as default};
