import{e as m,d as h,hA as L,n as z,aY as w,I,t as T,g as j,dB as O,dC as P,dD as N,aK as A,jw as G,jx as V}from"./index.25dca4c3.js";import{v as F,F as D}from"./rasterProjectionHelper.daf3bc91.js";import{s as M}from"./popupUtils.3f7dd2fa.js";import{i as k}from"./RefreshableLayerView.4027030d.js";import{a as W}from"./drapedUtils.a3ee7da2.js";const $=a=>{let t=class extends a{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}get datumTransformation(){return F(w(this.layer.fullExtent),this.view.spatialReference,!0)}supportsSpatialReference(e){return!!this.projectFullExtent(e)}projectFullExtent(e){const i=w(this.layer.fullExtent),r=F(i,e,!1);return D(i,e,r)}async fetchPopupFeatures(e,i){const{layer:r}=this;if(!e)throw new I("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:r});const{popupEnabled:n}=r,s=M(r,i);if(!n||T(s))throw new I("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:n,popupTemplate:s});const l=[],{value:o,magdirValue:u}=await r.identify(e,{timeExtent:this.timeExtent});let b="";if(o&&o.length){var x,R;b=r.type==="imagery-tile"&&r.hasStandardTime()&&o[0]!=null?o.map(g=>r.getStandardTimeValue(g)).join(", "):o.join(", ");const f={ObjectId:0},S="Raster.ServicePixelValue";f[S]=this._formatAttributeValue(b,S);const v=(x=r.rasterInfo)==null||(R=x.attributeTable)==null?void 0:R.features;if(v&&v.length>0){const g=v.filter(p=>{const c=p.attributes.value||p.attributes.Value||p.attributes.VALUE;return String(c)===b});if(g.length>0){const p=g[0];if(p){for(const c in p.attributes)if(p.attributes.hasOwnProperty(c)){const E=this._rasterFieldPrefix+c;f[E]=this._formatAttributeValue(p.attributes[c],E)}}}}const _=r.rasterInfo.dataType;_!=="vector-magdir"&&_!=="vector-uv"||(f["Raster.Magnitude"]=u==null?void 0:u[0],f["Raster.Direction"]=u==null?void 0:u[1]);const y=new j(this.fullExtent.clone(),null,f);y.layer=r,y.sourceLayer=y.layer,l.push(y)}return l}_formatAttributeValue(e,i){if(typeof e=="string"){const r=this.layer.popupTemplate&&this.layer.popupTemplate.fieldInfos,n=this._getFieldInfo(r,i),s=n&&n.format;if(s){let l,o;return e.trim().includes(",")?(l=",",o=l+" ",this._formatDelimitedString(e,l,o,s)):e.trim().includes(" ")?(l=o=" ",this._formatDelimitedString(e,l,o,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,i){if(!e||!e.length||!i)return;const r=i.toLowerCase();let n;return e.some(s=>!(!s.fieldName||s.fieldName.toLowerCase()!==r&&s.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(n=s,!0)),n}_formatDelimitedString(e,i,r,n){return e&&i&&r&&n?e.trim().split(i).map(s=>this._formatNumberFromString(s,n)).join(r):e}_formatNumberFromString(e,i){if(!e||!i)return e;const r=Number(e);return isNaN(r)?e:i.format(r)}};return m([h()],t.prototype,"layer",void 0),m([h(L)],t.prototype,"timeExtent",void 0),m([h()],t.prototype,"view",void 0),m([h()],t.prototype,"fullExtent",null),m([h()],t.prototype,"tileInfo",void 0),m([h({readOnly:!0})],t.prototype,"hasTilingEffects",null),t=m([z("esri.views.layers.ImageryTileLayerView")],t),t};let d=class extends $(k(O(P(N)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new I("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const a=A(()=>{var t,e;return(t=this.view)==null||(e=t.basemapTerrain)==null?void 0:e.tilingSchemeLocked}).then(()=>{const t=this.view.basemapTerrain.tilingScheme,{tileInfo:e}=this.layer,i=["png","png24","png32","jpg","mixed"].includes(e.format)&&t.compatibleWith(e);this.isAlignedMapTile=i;const r=i?e:t.toTileInfo();this.tileInfo=r,this.updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition],()=>this.refresh())});this.addResolvingPromise(a)}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null}get _blankTile(){const a=document.createElement("canvas"),t=a.getContext("2d"),[e,i]=this.tileInfo.size;return a.width=e,a.height=i,t.clearRect(0,0,e,i),t.getImageData(0,0,e,i)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){const a=this.tileInfo.lods,t=this.layer.tileInfo.lods,e=a[0].scale,i=t[t.length-1].scale;return this.levelRangeFromScaleRange(e,i)}_getfullExtent(){return this.projectFullExtent(this.view.basemapTerrain?this.view.basemapTerrain.spatialReference:this.view.spatialReference)}async fetchTile(a,t,e,i){const r=this.tileInfo,n=this._canSymbolizeInWebGL(),s={tileInfo:r,requestRawData:n,signal:w(i.signal),requestAsImageElement:this.isAlignedMapTile},l=await this.layer.fetchTile(a,t,e,s);if(l instanceof HTMLImageElement)return l;let o=l&&l.pixelBlock;if(T(o))return this._blankTile;if(!n&&(o=await this.layer.applyRenderer(l),T(o)))return this._blankTile;const u=new G([a,t,e],o,r.size[0],r.size[1]);return n?(u.symbolizerRenderer=this.layer.symbolizer.rendererJSON,u.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(a)),u.transformGrid=l.transformGrid):u.isRendereredSource=!0,u.interpolation=this.layer.interpolation,u.bandIds=this.layer.bandIds,u}_getSymbolizerOptions(a){const t=this.tileInfo.lodAt(a).resolution;return{pixelBlock:null,isGCS:this.view.basemapTerrain?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(a){this._canSymbolizeInWebGL()&&JSON.stringify(a.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(a.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(a.lij[0])))}createFetchPopupFeaturesQueryGeometry(a,t){return W(a,t,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){return V("3d").supportsTextureFloat&&this.layer.symbolizer.canRenderInWebGL}};m([h({readOnly:!0})],d.prototype,"_blankTile",null),m([h({readOnly:!0})],d.prototype,"imageFormatIsOpaque",null),m([h({readOnly:!0})],d.prototype,"hasMixedImageFormats",null),m([h({readOnly:!0})],d.prototype,"dataLevelRange",null),d=m([z("esri.views.3d.layers.ImageryTileLayerView3D")],d);const U=d;export{U as default};
