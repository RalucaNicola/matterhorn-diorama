var at=Object.defineProperty,ot=Object.defineProperties;var lt=Object.getOwnPropertyDescriptors;var Ee=Object.getOwnPropertySymbols;var ct=Object.prototype.hasOwnProperty,ut=Object.prototype.propertyIsEnumerable;var Ae=(t,e,i)=>e in t?at(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,$=(t,e)=>{for(var i in e||(e={}))ct.call(e,i)&&Ae(t,i,e[i]);if(Ee)for(var i of Ee(e))ut.call(e,i)&&Ae(t,i,e[i]);return t},W=(t,e)=>ot(t,lt(e));import{a8 as Qe,e as x,d as v,am as L,pM as xe,cX as G,ng as le,pl as Ze,n as Z,q2 as et,t as O,r as F,kt as ht,bF as tt,eF as ft,dg as dt,I as E,aP as N,aY as te,dl as mt,cJ as it,aC as st,d_ as pt,q3 as gt,cN as yt,q4 as xt,p2 as It,p3 as wt,p4 as vt,p5 as bt,px as St,pz as Tt,pd as Rt,p8 as _t,z as Ct,cp as kt,hv as pe,fl as Mt,q as Pt,fh as Ft,fq as Bt,ps as Dt,fp as $t,fg as Ot}from"./index.165b2b59.js";import{p as He,l as rt,t as Le,I as zt,B as Et,k as At,b as Ht,u as Lt,o as Nt,a as Jt}from"./rasterRendererHelper.18f8e474.js";import{m as Wt,h as qt,T as jt,e as Ut,u as Ce,O as Gt,k as ge,C as Vt,U as Yt,p as Xt,r as Ne,l as ce,M as Kt,a as Qt,n as Be,S as Zt,x as ei,o as ti,P as ii,q as si,s as Ie,N as ri,v as ni,w as ai}from"./dataUtils.7ccdaa4d.js";import{k as Je,X as we,_ as We,t as qe,e as oi,D as ke,F as Me,V as li,H as ci,T as ui}from"./rasterProjectionHelper.1c693ba5.js";import{e as hi,f as fi,m as De,c as di}from"./utils.886da039.js";import{u as mi}from"./PixelBlock.082f5427.js";import"./ClassBreaksDefinition.59347cc4.js";import"./colorUtils.e5585cd0.js";const je=Qe.getLogger("esri.layers.mixins.ImageryTileMixin"),pi=t=>{let e=class extends t{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(i){this._set("url",et(i,je))}set renderer(i){this._set("renderer",i),this.updateRenderer()}async convertVectorFieldData(i,s){if(O(i))return null;const n=this._rasterJobHandler.instance,r=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:i,dataType:r},s):Wt(i,r)}async createStreamlinesMesh(i,s){const n=this._rasterJobHandler.instance;return n?n.createStreamlinesMesh(i,s):qt(i.rendererSettings,i.flowData,F(s.signal)?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){const{multidimensionalInfo:s}=this.rasterInfo;if(O(s))return i;let n=i.multidimensionalDefinition||this.multidimensionalDefinition;!O(n)&&n.length||(n=this._getDefaultSlice());const r=i.timeExtent||this.timeExtent;if(F(n)&&F(r)&&(F(r.start)||F(r.end))){var a,c;n=n.map(d=>d.clone());const o=(a=s.variables.find(({name:d})=>d===n[0].variableName))==null||(c=a.dimensions)==null?void 0:c.find(({name:d})=>d==="StdTime"),l=n.find(({dimensionName:d})=>d==="StdTime");if(!o||!l)return W($({},i),{multidimensionalDefinition:null});const{start:u,end:h}=r,m=O(u)?null:u.getTime(),f=O(h)?null:h.getTime(),p=m!=null?m:f,g=f!=null?f:m;if(F(o.values)){const d=o.values.filter(y=>{if(Array.isArray(y)){if(p===g)return y[0]<=p&&y[1]>=p;const I=y[0]<=p&&y[1]>p||y[0]<g&&y[1]>=g,w=y[0]>=p&&y[1]<=g||y[0]<p&&y[1]>g;return I||w}return p===g?y===p:y>=p&&y<=g});if(d.length){const y=d.sort((I,w)=>{var C,b,R,T;return p===g?((R=I[0])!=null?R:I)-((T=w[0])!=null?T:w):Math.abs(((C=I[1])!=null?C:I)-g)-Math.abs(((b=w[1])!=null?b:w)-g)})[0];l.values=[y]}else n=null}else if(o.hasRegularIntervals&&o.extent){const[d,y]=o.extent;p>y||g<d?n=null:l.values=p===g?[p]:[Math.max(d,p),Math.min(y,g)]}}return W($({},i),{multidimensionalDefinition:n})}async updateRenderer(){if(!this.loaded||JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const i=this._rasterJobHandler.instance;i&&(this.symbolizer.rendererJSON=Le(this.renderer.toJSON()),this.symbolizer.bind(),await i.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(i,s){const n=i&&i.pixelBlock;if(!(F(n)&&n.pixels&&n.pixels.length>0))return null;let r;await this.updateRenderer();const a=this._rasterJobHandler.instance,{bandIds:c}=this;return r=a?await a.symbolize(W($({},i),{simpleStretchParams:s,bandIds:c})):this.symbolizer.symbolize(W($({},i),{simpleStretchParams:s,bandIds:c})),r}getTileUrl(i,s,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${n}`:""}getCompatibleTileInfo(i,s,n=!1){if(!this.loaded||O(s))return null;if(n&&i.equals(this.spatialReference))return this.tileInfo;const r=ht(i);return le.create({size:256,spatialReference:i,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,s,n,r={}){if(r.requestAsImageElement){const a=this.getTileUrl(i,s,n);return tt(a,{responseType:"image",query:$($({},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:r.signal}).then(c=>c.data)}if(F(this.rasterInfo.multidimensionalInfo)&&(r=this.normalizeRasterFetchOptions(r),O(r.multidimensionalDefinition))){const a=r.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,n,a),pixelBlock:null}}return await this._initJobHandler(),this.renderer.type==="raster-shaded-relief"&&(r=W($({},r),{buffer:{cols:1,rows:1}})),this.raster.fetchTile(i,s,n,r)}async fetchPixels(i,s,n,r={}){return F(this.rasterInfo.multidimensionalInfo)&&(r=this.normalizeRasterFetchOptions(r),O(r.multidimensionalDefinition))?{extent:i,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(i,s,n,r))}async identify(i,s={}){return F(this.rasterInfo.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),O(s.multidimensionalDefinition))?{location:i,value:null}:this.raster.identify(i,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var i;const s=this.rasterInfo.multidimensionalInfo;if(O(s)||this.rasterInfo.dataType!=="standard-time")return!1;const n=(i=this.multidimensionalDefinition[0])==null?void 0:i.variableName;return s.variables.some(r=>r.name===n&&r.dimensions.some(a=>a.name==="StdTime"))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=this._getDefaultSlice()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new Ht;return this._rasterJobHandler.connectionPromise=i.initialize().then(()=>{this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(this.interpolation==null){var i;const s=zt(this.rasterInfo,this.raster.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",s)}}_getDefaultSlice(){const{multidimensionalInfo:i}=this.raster.rasterInfo;if(O(i))return null;const s=i.variables[0];return s.dimensions.map(n=>{var r,a;return new He({variableName:s.name,dimensionName:n.name,values:[(r=(a=n.values)==null?void 0:a[0])!=null?r:n.extent[0]],isSlice:!0})})}_configDefaultRenderer(){const i=this.raster.rasterInfo;var s;this.bandIds||(this.bandIds=Et(i)),this.renderer||(this.renderer=At(i,{bandIds:this.bandIds,variableName:F(this.multidimensionalDefinition)?(s=this.multidimensionalDefinition[0])==null?void 0:s.variableName:null})),this.symbolizer?(this.symbolizer.rendererJSON=Le(this.renderer.toJSON()),this.symbolizer.rasterInfo=i):this.symbolizer=new jt({rendererJSON:this.renderer.toJSON(),rasterInfo:i});const n=this.symbolizer.bind();n.success||je.warn("imagery-tile-mixin",n.error||"The given renderer is not supported by the layer.")}};return x([v()],e.prototype,"_cachedRendererJson",void 0),x([v()],e.prototype,"_compatibleFullExtent",void 0),x([v()],e.prototype,"_rasterJobHandler",void 0),x([v()],e.prototype,"bandIds",void 0),x([v({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),x([v({type:L,json:{read:!1}}),xe("rasterInfo.extent")],e.prototype,"fullExtent",void 0),x([v()],e.prototype,"interpolation",void 0),x([v()],e.prototype,"ioConfig",void 0),x([v({type:[He]})],e.prototype,"multidimensionalDefinition",void 0),x([v()],e.prototype,"raster",void 0),x([v({readOnly:!0}),xe("raster.rasterInfo")],e.prototype,"rasterInfo",void 0),x([v()],e.prototype,"sourceJSON",void 0),x([v({type:G,json:{read:!1}}),xe("rasterInfo.spatialReference")],e.prototype,"spatialReference",void 0),x([v({type:le,json:{read:!1}}),xe("rasterInfo.storageInfo.tileInfo")],e.prototype,"tileInfo",void 0),x([v(Ze)],e.prototype,"url",null),x([v({types:rt})],e.prototype,"renderer",null),x([v()],e.prototype,"symbolizer",void 0),e=x([Z("esri.layers.ImageryTileMixin")],e),e};class gi{constructor(e=15e3,i=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,i)}decreaseRefCount(e,i){const s=e+"/"+i,n=this._cachedBlocks;if(n.has(s)){const r=n.get(s);return r.refCount--,r.refCount<=0&&(n.delete(s),r.controller&&r.controller.abort()),r.refCount}return 0}getBlock(e,i){const s=e+"/"+i,n=this._cachedBlocks;if(n.has(s)){const r=n.get(s);return r.ts=Date.now(),r.refCount++,n.delete(s),n.set(s,r),r.block}return null}putBlock(e,i,s,n=null){const r=this._cachedBlocks,a=e+"/"+i;if(r.has(a)){const c=r.get(a);c.ts=Date.now(),c.refCount++}else r.set(a,{block:s,ts:Date.now(),refCount:1,controller:n});this._trim(),this._updateTimer()}deleteBlock(e,i){const s=this._cachedBlocks,n=e+"/"+i;s.has(n)&&s.delete(n)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const i=Array.from(e),s=Date.now();for(let n=0;n<i.length&&i[n][1].ts<=s-this._duration;n++)e.delete(i[n][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const i=Array.from(e);for(let s=0;s<i.length-this._size;s++)e.delete(i[s][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}}const ie=new Map,se=new gi;function Ue(t,e){return e==null?t:`${t}?sliceId=${e}`}function yi(t,e,i){if(!ie.has(t))return e==null?se.decreaseRefCount(t,i):0;const s=ie.get(t);if(s[e]==null)return se.decreaseRefCount(t,i);const n=s[e].cache;if(n.has(i)){const r=n.get(i);if(r.refCount--,r.refCount===0){n.delete(i);for(let a=0;a<s.length;a++)s[a]&&s[a].cache.has(i)&&s[a].cache.delete(i);r.controller&&r.controller.abort()}return r.refCount}return 0}function Ge(t,e,i){if(!ie.has(t))return e==null?se.getBlock(t,i):null;const s=ie.get(t);if(s[e]==null){for(let r=0;r<s.length;r++)if(s[r]&&s[r].cache.has(i)){const a=s[r].cache.get(i);return a.refCount++,a.block}return se.getBlock(t,i)}const n=s[e].cache;if(n.has(i)){const r=n.get(i);return r.refCount++,r.block}for(let r=0;r<s.length;r++)if(r!==e&&s[r]&&s[r]&&s[r].cache.has(i)){const a=s[r].cache.get(i);return a.refCount++,n.set(i,a),a.block}return null}function Ve(t,e,i,s,n=null){if(!ie.has(t))return void(e==null&&se.putBlock(t,i,s,n));const r=ie.get(t);if(r[e]==null)return void se.putBlock(t,i,s,n);const a={refCount:1,block:s,isResolved:!1,isRejected:!1,controller:n};s.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),r[e].cache.set(i,a)}function xi(t,e,i){if(!ie.has(t))return void(e==null&&se.deleteBlock(t,i));const s=ie.get(t);s[e]!=null?s[e].cache.delete(i):se.deleteBlock(t,i)}const ve=8;let X=class extends ft(dt){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const t=Je();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t=W($({},t),{ioConfig:$({resolution:null,bandIds:null,sampling:"closest",tileInfo:le.create()},t.ioConfig)})),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=we(t.spatialReference);return F(e)&&t.extent.width>=e/2}set url(t){this._set("url",et(t,Qe.getLogger(this.declaredClass)))}async open(t){throw new E("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(t,e,i,s={}){const n=s.tileInfo||this.rasterInfo.storageInfo.tileInfo,r=this.getTileExtentFromTileInfo(t,e,i,n);return this.fetchPixels(r,n.size[0],n.size[1],s)}async identify(t,e={}){e=this._getRequestOptionsWithSliceId(e);const{spatialReference:i,extent:s}=this.rasterInfo,{datumTransformation:n}=e;let r=We(t,i,n);if(!s.intersects(r))return{location:r,value:null};if(F(this.rasterInfo.transform)){const w=this.rasterInfo.transform.inverseTransform(r);if(!this.rasterInfo.nativeExtent.intersects(w))return{location:w,value:null};r=w}let a=0;if(e.srcResolution)a=qe(e.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(t,e),a==null)return{location:r,value:null};const c=this.identifyPixelLocation(r,a,null);if(c===null)return{location:r,value:null};const{row:o,col:l,rowOffset:u,colOffset:h}=c,m=Ue(this.url,e.sliceId),f=`${a}/${o}/${l}`;let p=Ge(m,null,f);O(p)&&(p=this.fetchRawTile(a,o,l,e),Ve(m,null,f,p));const g=await p;if(O(g)||!g.pixels||g.pixels.length===0)return{location:r,value:null};const d=u*this.rasterInfo.storageInfo.blockHeight+h,y=!g.mask||g.mask[d]?g.pixels.map(w=>w[d]):null,I=this.rasterInfo.dataType;return(I==="vector-magdir"||I==="vector-uv")&&(y==null?void 0:y.length)>1?{location:r,value:y,magdirValue:I==="vector-magdir"?[y[0],y[1]]:Ut([y[0],y[1]]),pyramidLevel:a}:{location:r,value:y,pyramidLevel:a}}async fetchPixels(t,e,i,s={}){if(t=oi(t),(s=this._getRequestOptionsWithSliceId(s)).requestRawData)return this._fetchPixels(t,e,i,s);const n=we(t.spatialReference),r=ke(t);if(O(n)||r===0||r===1&&this._isGlobalWrappableSource)return this._fetchPixels(t,e,i,s);if(r>=3)return{extent:t,pixelBlock:null};const a=[],{xmin:c,xmax:o}=t,l=Math.round(n/(o-c)*e),u=l-Math.round((n/2-c)/(o-c)*e);let h=0;const m=[];for(let d=0;d<=r;d++){const y=new L({xmin:d===0?c:-n/2,xmax:d===r?o-n*d:n/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),I=d===0?l-u:d===r?e-h:l;h+=I,m.push(I);const w=s.disableWrapAround&&d>0?null:this._fetchPixels(y,I,i,s);a.push(w)}const f=(await Promise.all(a)).map(d=>d==null?void 0:d.pixelBlock);let p=null;const g={width:e,height:i};return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:g,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:m},s)).pixelBlock:p=Ce(f,g,{blockWidths:m}),{extent:t,srcExtent:Me(t,this.rasterInfo.spatialReference,s.datumTransformation),pixelBlock:p}}async fetchRawPixels(t,e,i,s={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const n=await this._fetchRawTiles(t,e,i,s),{nativeExtent:r,nativePixelSize:a,storageInfo:c}=this.rasterInfo,o=2**t,l=a.x*o,u=a.y*o,h=new L({xmin:r.xmin+l*e.x,xmax:r.xmin+l*(e.x+i.width-1),ymin:r.ymax-u*(e.y+i.height-1),ymax:r.ymax-u*e.y,spatialReference:r.spatialReference});if(!n)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:m,mosaicSize:f}=n;if(m.length===1&&F(m[0])&&m[0].width===i.width&&m[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:n.pixelBlocks[0]};const p=t>0?c.pyramidBlockWidth:c.blockWidth,g=t>0?c.pyramidBlockHeight:c.blockHeight,d={x:e.x%p,y:e.y%g};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:f,destDimension:i,clipOffset:d,clipSize:i,coefs:null,sampleSpacing:null,interpolation:s.interpolation,alignmentInfo:null,blockWidths:null},s)).pixelBlock:y=Ce(m,f,{clipOffset:d,clipSize:i}),{extent:h,srcExtent:h,pixelBlock:y}}fetchRawTile(t,e,i,s){throw new E("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return Me(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?Gt(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,e,i){var s,n;const{customFetchParameters:r}=this.ioConfig,{range:a,query:c,headers:o}=e;i=(s=(n=i)!=null?n:e.retryCount)!=null?s:this.ioConfig.retryCount;const l=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await tt(t,W($({},e),{query:$($({},c),r),headers:$($({},o),l)}))}catch(u){if(i>0)return i--,this.request(t,e,i);throw u}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;if(O(e)||O(t)||t.length===0)return null;let i=0;const s=t[0].variableName;for(let n=0;n<e.variables.length;n++){const r=e.variables[n],a=r.dimensions;if(r.name!==s){i+=a.map(l=>this._getDimensionValuesCount(l)).reduce((l,u)=>l+u);break}const c=a.map(l=>this._getDimensionValuesCount(l)),o=a.length;for(let l=0;l<o;l++){const u=t.find(f=>f.dimensionName===a[l].name);if(u==null)return null;const h=Array.isArray(u.values[0])?u.values[0][0]:u.values[0],m=this._getIndexFromDimensions(h,a[l]);if(m===-1)return null;c.shift(),i+=l===o-1?m:m*c.reduce((f,p)=>f+p)}}return i}getTileExtentFromTileInfo(t,e,i,s){const n=s.lodAt(t);return this.getTileExtent({x:n.resolution,y:n.resolution},e,i,s.origin,s.spatialReference,s.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:i,pixelSize:s}=this.rasterInfo;if(!t.tileInfo){const n=[],r=t.maximumPyramidLevel||0;let a=Math.max(s.x,s.y),c=1/.0254*96*a;for(let l=0;l<=r;l++)n.push({level:r-l,resolution:a,scale:c}),a*=2,c*=2;const o=new N({x:i.xmin,y:i.ymax,spatialReference:e});t.tileInfo=new le({origin:o,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:n}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,i=512,s){const{width:n,height:r,nativeExtent:a,pixelSize:c,spatialReference:o}=t,l=new N({x:a.xmin,y:a.ymax,spatialReference:o});s==null&&(s=Math.max(0,Math.round(Math.log(Math.max(n,r))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[c],s);t.storageInfo=new ge({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:l,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:u})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,i,s,n,r=0,a=2){if(n.length===1&&r>0){n=[...n];let{x:u,y:h}=n[0];for(let m=0;m<r;m++)u*=a,h*=a,n.push({x:u,y:h})}const c=[],{x:o,y:l}=s;for(let u=0;u<n.length;u++){const{x:h,y:m}=n[u];c.push({minCol:Math.floor((t.xmin-o+.1*h)/e/h),maxCol:Math.floor((t.xmax-o-.1*h)/e/h),minRow:Math.floor((l-t.ymax+.1*m)/i/m),maxRow:Math.floor((l-t.ymin-.1*m)/i/m)})}return c}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:s}=this.rasterInfo.storageInfo;if(t===0)return e;if(F(i)&&i.length)return i[t-1];const n=s**t;return{x:e.x*n,y:e.y*n}}identifyPixelLocation(t,e,i){const{spatialReference:s,nativeExtent:n}=this.rasterInfo,{blockWidth:r,blockHeight:a,maximumPyramidLevel:c,origin:o}=this.rasterInfo.storageInfo,l=We(t,s,i);if(!n.intersects(l)||e<0||e>c)return null;const u=this.getPyramidPixelSize(e),{x:h,y:m}=u,f=(o.y-l.y)/m/a,p=(l.x-o.x)/h/r,g=Math.min(a-1,Math.floor((f-Math.floor(f))*a)),d=Math.min(r-1,Math.floor((p-Math.floor(p))*r));return{pyramidLevel:e,row:Math.floor(f),col:Math.floor(p),rowOffset:g,colOffset:d,srcLocation:l}}getTileExtent(t,e,i,s,n,r){const[a,c]=r,o=s.x+i*a*t.x,l=o+a*t.x,u=s.y-e*c*t.y,h=u-c*t.y;return new L({xmin:o,xmax:l,ymin:h,ymax:u,spatialReference:n})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,i){const s=this.rasterInfo.storageInfo.blockBoundary[t];return!s||s.maxRow<e||s.maxCol<i||s.minRow>e||s.minCol>i}async _fetchPixels(t,e,i,s={}){let n=ke(t);if(n>=2)return{extent:t,pixelBlock:null};const r=this._getSourceDataInfo(t,e,i,s),{pyramidLevel:a,pyramidResolution:c,srcResolution:o,srcExtent:l,srcWidth:u,srcHeight:h}=r;if(u===0||h===0)return{extent:t,srcExtent:l,pixelBlock:null};const m=te(this.rasterInfo.transform),f=(m==null?void 0:m.type)==="gcs-shift",p=F(we(t.spatialReference));!f&&p||(n=ke(r.srcExtent,f));const g=this.rasterInfo.storageInfo,d={x:Math.floor((l.xmin-g.origin.x)/c.x+.1),y:Math.floor((g.origin.y-l.ymax)/c.y+.1)},y=await this._fetchRawTiles(a,d,{width:u,height:h,wrapCount:n},s);if(!y)return{extent:t,srcExtent:l,pixelBlock:null};const I=a>0?g.pyramidBlockWidth:g.blockWidth,w=a>0?g.pyramidBlockHeight:g.blockHeight,C=I===u&&w===h&&d.x%I==0&&d.y%w==0,b=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),R=!t.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:T}=s;if(!R&&C&&y.pixelBlocks.length===1&&I===e&&w===i&&o.x===b.x&&o.y===b.y)return{extent:t,srcExtent:l,pixelBlock:y.pixelBlocks[0]};const _=p&&F(we(l.spatialReference)),S=s.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");S&&!this.rasterJobHandler&&await Je();const k=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:y.extent,pixelSize:b.toJSON(),datumTransformation:T,rasterTransform:m,hasWrapAround:n>0||_,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:S},s):li({projectedExtent:t,srcBufferExtent:y.extent,pixelSize:b,datumTransformation:T,rasterTransform:m,hasWrapAround:n>0||_,isAdaptive:!1,includeGCSGrid:S});let D;const P=!s.requestRawData,V={rows:k.spacing[0],cols:k.spacing[1]},q=te(this._getRasterTileAlignmentInfo(a,y.extent.xmin)),{pixelBlocks:J,mosaicSize:A,isPartiallyFilled:M}=y;let j=null;if(this.rasterJobHandler)({pixelBlock:D,localNorthDirections:j}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:J,srcMosaicSize:A,destDimension:P?{width:e,height:i}:null,coefs:P?k.coefficients:null,sampleSpacing:P?V:null,projectDirections:S,gcsGrid:S?k.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:s.interpolation,alignmentInfo:q,blockWidths:null},s));else{const B=Ce(J,A,{alignmentInfo:q});D=P?Vt(B,{width:e,height:i},k.coefficients,V,s.interpolation):B,S&&k.gcsGrid&&(j=Yt({width:e,height:i},k.gcsGrid),D=Xt(D,this.rasterInfo.dataType,j))}return s.requestRawData||S?{srcExtent:l,pixelBlock:D,transformGrid:k,localNorthDirections:j,extent:t,isPartiallyFilled:M}:{srcExtent:l,extent:t,pixelBlock:D}}async _fetchRawTiles(t,e,i,s){const{origin:n,blockBoundary:r}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:c}=this.getBlockWidthHeight(t);let{x:o,y:l}=e,{width:u,height:h,wrapCount:m}=i;const f=this._getRasterTileAlignmentInfo(t,0);s.buffer&&(o-=s.buffer.cols,l-=s.buffer.rows,u+=2*s.buffer.cols,h+=2*s.buffer.rows);let p=0,g=0,d=0;m&&F(f)&&({worldColumnCountFromOrigin:g,originColumnOffset:d,rightPadding:p}=f,g*f.blockWidth-p>=o+u&&(p=0));const y=Math.floor(o/a),I=Math.floor(l/c),w=Math.floor((o+u+p-1)/a),C=Math.floor((l+h+p-1)/c),b=r[t];if(!b)return null;const{minRow:R,minCol:T,maxCol:_,maxRow:S}=b;if(m===0&&(C<R||w<T||I>S||y>_))return null;const k=new Array;let D=!1;const P=this.ioConfig.allowPartialFill==null?s.allowPartialFill:this.ioConfig.allowPartialFill;for(let B=I;B<=C;B++)for(let Y=y;Y<=w;Y++){let ye=Y;if(!s.disableWrapAround&&m&&F(f)&&g<=Y&&(ye=Y-g-d),B>=R&&ye>=T&&S>=B&&_>=ye){const Oe=this._fetchRawTile(t,B,ye,s);P?k.push(new Promise(ze=>{Oe.then(nt=>ze(nt)).catch(()=>{D=!0,ze(null)})})):k.push(Oe)}else k.push(null)}if(k.length===0)return null;const V=await Promise.all(k),q={height:(C-I+1)*c,width:(w-y+1)*a},{spatialReference:J}=this.rasterInfo,A=this.getPyramidPixelSize(t),{x:M,y:j}=A;return{extent:new L({xmin:n.x+y*a*M,xmax:n.x+(w+1)*a*M,ymin:n.y-(C+1)*c*j,ymax:n.y-I*c*j,spatialReference:J}),pixelBlocks:V,mosaicSize:q,isPartiallyFilled:D}}_fetchRawTile(t,e,i,s){const n=this.rasterInfo.storageInfo.blockBoundary[t];if(!n)return Promise.resolve(null);const{minRow:r,minCol:a,maxCol:c,maxRow:o}=n;if(e<r||i<a||e>o||i>c)return Promise.resolve(null);const l=Ue(this.url,s.sliceId),u=`${t}/${e}/${i}`;let h=Ge(l,s.registryId,u);if(O(h)){const m=new AbortController;h=this.fetchRawTile(t,e,i,W($({},s),{signal:m.signal})),Ve(l,s.registryId,u,h,m),h.catch(()=>xi(l,s.registryId,u))}return s.signal&&mt(s,()=>{yi(l,s.registryId,u)}),h}_getIndexFromDimensions(t,e){const{extent:i,interval:s,unit:n,values:r}=e;if(r!=null&&r.length)return Array.isArray(r[0])?r.findIndex(l=>l[0]<=t&&l[1]>=t):r.indexOf(t);if(t>i[1])return-1;const a=i[0];let c=-1;if(n==="ISO8601"){var o;switch(((o=e.intervalUnit)==null?void 0:o.toLowerCase())||"seconds"){case"seconds":c=Math.round((t-a)/1e3/s);break;case"minutes":c=Math.round((t-a)/6e4/s);break;case"hours":c=Math.round((t-a)/36e5/s);break;case"days":c=Math.round((t-a)/864e5/s);break;case"years":c=Math.round((new Date(t).getUTCFullYear()-new Date(a).getUTCFullYear())/s);break;case"decades":c=Math.round((new Date(t).getUTCFullYear()-new Date(a).getUTCFullYear())/10/s)}return c}return Math.round((t-a)/s)}_getDimensionValuesCount(t){const{extent:e,interval:i,unit:s,values:n}=t;let r=(n==null?void 0:n.length)||0;if(r)return r;const a=e[0];if(r===0&&s==="ISO8601"){var c;switch(((c=t.intervalUnit)==null?void 0:c.toLowerCase())||"seconds"){case"seconds":r=Math.round((e[1]-e[0])/1e3/i);break;case"minutes":r=Math.round((e[1]-e[0])/6e4/i);break;case"hours":r=Math.round((e[1]-e[0])/36e5/i);break;case"days":r=Math.round((e[1]-e[0])/864e5/i);break;case"years":r=Math.round((new Date(e[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":r=Math.round((new Date(e[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return r}return Math.round((e[1]-e[0])/i)}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=ci(this.rasterInfo)),O(this._rasterTileAlighmentInfo.pyramidsInfo)?null:$({startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform},this._rasterTileAlighmentInfo.pyramidsInfo[t])}_getSourceDataInfo(t,e,i,s={}){const n={datumTransformation:s.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};s.srcResolution&&(n.srcResolution=s.srcResolution,this._updateSourceDataInfo(t,n));const r=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:c,pyramidLevel:o}=n,l=a/e,u=c/i,h=o<r&&l*u>=16;if(h||o===r&&(l>ve||u>ve)||a===0||c===0){const m=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference});let f=ui(m,this.rasterInfo.spatialReference,t,n.datumTransformation);const p=!f||s.srcResolution&&f.x+f.y<s.srcResolution.x+s.srcResolution.y;if(h&&s.srcResolution&&p){const g=Math.round(Math.log(Math.max(l,u))/Math.LN2)-1;if(r-o+3>=g){const d=2**g;f={x:s.srcResolution.x*d,y:s.srcResolution.y*d}}}f&&(n.srcResolution=f,this._updateSourceDataInfo(t,n))}return(n.srcWidth/e>ve||n.srcHeight/i>ve)&&(n.srcWidth=0,n.srcHeight=0),n}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:s,datumTransformation:n}=e,{pyramidLevel:r,pyramidResolution:a,excessiveReading:c}=qe(s,this.rasterInfo,this.ioConfig.sampling);if(c)return;let o=e.srcExtent||Me(t,i,n);if(o==null)return;const l=te(this.rasterInfo.transform);l&&(o=l.inverseTransform(o)),e.srcExtent=o;const u=Math.ceil((o.xmax-o.xmin)/a.x-.1),h=Math.ceil((o.ymax-o.ymin)/a.y-.1);e.pyramidLevel=r,e.pyramidResolution=a,e.srcWidth=u,e.srcHeight=h}_getRequestOptionsWithSliceId(t){return F(this.rasterInfo.multidimensionalInfo)&&t.sliceId==null&&(t=W($({},t),{sliceId:this.getSliceIndex(t.multidimensionalDefinition)})),t}};x([v()],X.prototype,"_rasterTileAlighmentInfo",void 0),x([v({readOnly:!0})],X.prototype,"_isGlobalWrappableSource",null),x([v(Ze)],X.prototype,"url",null),x([v({type:String,json:{write:!0}})],X.prototype,"datasetName",void 0),x([v({type:String,json:{write:!0}})],X.prototype,"datasetFormat",void 0),x([v()],X.prototype,"rasterInfo",void 0),x([v()],X.prototype,"ioConfig",void 0),x([v()],X.prototype,"sourceJSON",void 0),X=x([Z("esri.layers.support.rasterDatasets.BaseRaster")],X);const he=X;function Ii(t){const e=t.fields,i=t.records,s=e.some(l=>l.name.toLowerCase()==="oid")?"OBJECTID":"OID",n=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(l=>({name:l.name,type:"esriFieldType"+l.typeName,alias:l.name}))),r=n.map(l=>l.name),a=[];let c=0,o=0;return i.forEach(l=>{const u={};for(u[s]=c++,o=1;o<r.length;o++)u[r[o]]=l[o-1];a.push({attributes:u})}),{displayFieldName:"",fields:n,features:a}}class wi{static get supportedVersions(){return[5]}static parse(e){const i=new DataView(e),s=3&i.getUint8(0);if(s!==3)return{header:{version:s},recordSet:null};const n=i.getUint32(4,!0),r=i.getUint16(8,!0),a=i.getUint16(10,!0),c={version:s,recordCount:n,headerByteCount:r,recordByteCount:a};let o=32;const l=[],u=[];let h;if(s===3){for(;i.getUint8(o)!==13;)h=String.fromCharCode(i.getUint8(o+11)).trim(),l.push({name:Ne(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:i.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<n&&e.byteLength-o>a;){const m=[];i.getUint8(o)===32?(o+=1,l.forEach(f=>{if(f.type==="C")m.push(Ne(new Uint8Array(e,o,f.length)).trim());else if(f.type==="N")m.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim(),10));else if(f.type==="F")m.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim()));else if(f.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim();m.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}o+=f.length}),u.push(m)):o+=a}}return{header:c,fields:l,records:u,recordSet:Ii({fields:l,records:u})}}}const re=new Map;re.set("int16","esriFieldTypeSmallInteger"),re.set("int32","esriFieldTypeInteger"),re.set("int64","esriFieldTypeInteger"),re.set("float32","esriFieldTypeSingle"),re.set("float64","esriFieldTypeDouble"),re.set("text","esriFieldTypeString");const Ye=8;let fe=class extends he{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(t){await this.init();const{data:e}=await this.request(this.url+"/conf.json",{signal:t==null?void 0:t.signal});if(!this._validateHeader(e))throw new E("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:s}=this._parseHeader(e);if(s.dataType==="thematic"){const n=await this._fetchAuxiliaryInformation();s.attributeTable=n}this._set("storageInfo",i),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(t,e,i,s={}){const n=this.rasterInfo.storageInfo.maximumPyramidLevel-t;if(n<0)return null;const r=this._buildCacheFilePath(n,e,i,s.multidimensionalDefinition),a=this._getIndexRecordFromBundle(e,i),c=await this.request(r,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!c)return null;const o=new Uint8Array(c.data),l=this._getTileEndAndContentType(o,a);if(l.recordSize===0)return null;const u=await this.request(r,{range:{from:l.position,to:l.position+l.recordSize},responseType:"array-buffer",signal:s.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(t){const e=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return t&&t.type==="RasterInfo"&&!e.some(i=>!t[i])}_parseHeader(t){var e,i;const s=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][t.pixelType],{bandCount:n,histograms:r,colormap:a,blockWidth:c,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:u}=t,h=t.statistics&&t.statistics.map(B=>({min:B.min,max:B.max,avg:B.mean,stddev:B.standardDeviation,median:B.median,mode:B.mode})),m=t.extent.spatialReference,f=(e=t.geodataXform)==null?void 0:e.spatialReference,p=new G(m!=null&&m.wkid||m!=null&&m.wkt?m:f);let g=new L({xmin:t.extent.xmin,ymin:t.extent.ymin,xmax:t.extent.xmax,ymax:t.extent.ymax,spatialReference:p});const d=new N({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:p}),y=Math.round((g.xmax-g.xmin)/d.x),I=Math.round((g.ymax-g.ymin)/d.y),w=this._parseTransform(t.geodataXform),C=w?g:null;w&&(g=w.forwardTransform(g),d.x=(g.xmax-g.xmin)/y,d.y=(g.ymax-g.ymin)/I);const b=(i=t.properties)!=null?i:{},R=t.format.toLowerCase().replace("cache/",""),T=new N(t.origin.x,t.origin.y,p);let _,S,k,D;if(a&&a.colors)for(_=[],S=0;S<a.colors.length;S++)k=a.colors[S],D=a.values?a.values[S]:S,_.push([D,255&k,k<<16>>>24,k<<8>>>24,k>>>24]);const P=t.LODInfos,V=[];for(S=0;S<P.levels.length;S++)V.push({level:P.levels[S],resolution:P.resolutions[S],scale:96/.0254*P.resolutions[S]});const q=new le({dpi:96,lods:V,format:R,origin:T,size:[c,o],spatialReference:p}),J={recordSize:Ye,packetSize:t.packetSize,headerSize:t.packetSize*t.packetSize*Ye+64},A=[{maxCol:Math.ceil(y/c)-1,maxRow:Math.ceil(I/o)-1,minCol:0,minRow:0}];let M=2;if(u>0)for(S=0;S<u;S++)A.push({maxCol:Math.ceil(y/M/c)-1,maxRow:Math.ceil(I/M/o)-1,minCol:0,minRow:0}),M*=2;const j=t.mdInfo;return{storageInfo:J,rasterInfo:new ce({width:y,height:I,pixelType:s,bandCount:n,extent:g,nativeExtent:C,transform:w,spatialReference:p,pixelSize:d,keyProperties:b,statistics:h,histograms:r,multidimensionalInfo:j,colormap:_,storageInfo:new ge({blockWidth:c,blockHeight:o,pyramidBlockWidth:c,pyramidBlockHeight:o,origin:T,tileInfo:q,firstPyramidLevel:l,maximumPyramidLevel:u,blockBoundary:A})})}}_parseTransform(t){var e,i;if(!hi(t))throw new E("cloudraster:open","the data contains unsupported geodata transform types");const s=fi(t);if(s.type==="identity")return null;if(s.type!=="polynomial"||(e=s.forwardCoefficients)==null||!e.length||(i=s.inverseCoefficients)==null||!i.length)throw new E("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return s}async _fetchAuxiliaryInformation(t){const e=this.request(this.url+"/conf.vat.json",{signal:t}).then(r=>r.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:t}).then(r=>r.data).catch(()=>null),s=await Promise.all([e,i]);let n;if(s[0]){let r=s[0].fields;const a=s[0].values;if(r&&a){r=r.map(o=>({type:o.name==="OID"?"esriFieldTypeOID":re.get(o.type),name:o.name,alias:o.alias||o.name}));const c=a.map(o=>({attributes:o}));r&&a&&(n={fields:r,features:c})}}return!n&&s[1]&&(n=wi.parse(s[1]).recordSet),it.fromJSON(n)}_buildCacheFilePath(t,e,i,s){const n=this.storageInfo.packetSize,r=Math.floor(e/n)*n,a=Math.floor(i/n)*n,c="R"+this._toHexString4(r)+"C"+this._toHexString4(a);let o="L";o+=t>=10?t.toString():"0"+t.toString();const{multidimensionalInfo:l}=this.rasterInfo,u=s==null?void 0:s[0];if(O(l)||!u)return`${this.url}/_alllayers/${o}/${c}.bundle`;let h=l.variables.find(f=>f.name===u.variableName).dimensions[0].values.indexOf(u.values[0]).toString(16);const m=4-h.length;for(let f=0;f<m;f++)h="0"+h;return h="S"+h,`${this.url}/_alllayers/${u.variableName}/${h}/${o}/${c}.bundle`}_getIndexRecordFromBundle(t,e){const i=this.storageInfo.packetSize,s=i*(t%i)+e%i;if(s<0)throw"Invalid level / row / col";return 20+s*this.storageInfo.recordSize+44}_getTileEndAndContentType(t,e){const i=t.subarray(e,e+8);let s,n=0;for(s=0;s<5;s++)n|=(255&i[s])<<8*s;const r=0xffffffffff&n;for(n=0,s=5;s<8;s++)n|=(255&i[s])<<8*(s-5);return{position:r,recordSize:0xffffffffff&n}}_toHexString4(t){let e=t.toString(16);if(e.length!==4){let i=4-e.length;for(;i-- >0;)e="0"+e}return e}};x([v({readOnly:!0})],fe.prototype,"storageInfo",void 0),x([v({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),fe=x([Z("esri.layers.support.rasterDatasets.CloudRaster")],fe);const vi=fe;let de=class extends he{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(t){var e;await this.init();const{pixelBlock:i,statistics:s,histograms:n,name:r,keyProperties:a,nativeExtent:c,transform:o}=this.data,{width:l,height:u,pixelType:h}=i,m=this.data.extent||new L({xmin:-.5,ymin:.5,xmax:l-.5,ymax:u-.5,spatialReference:new G({wkid:3857})}),f=(e=this.data.isPseudoSpatialReference)!=null?e:!this.data.extent,p={x:m.width/l,y:m.height/u},g=new ce({width:l,height:u,pixelType:h,extent:m,nativeExtent:c,transform:o,pixelSize:p,spatialReference:m.spatialReference,bandCount:3,keyProperties:a||{},statistics:s,isPseudoSpatialReference:f,histograms:n});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},t),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(t,e,i,s={}){const n=this._pixelBlockTiles.get(`${t}/${e}/${i}`);return Promise.resolve(n)}async _buildInMemoryRaster(t,e,i){const s=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:s},i):Promise.resolve(Kt(t,e,s)),r=F(this.rasterInfo.statistics),a=F(this.rasterInfo.histograms),c=r&&a?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},i):Promise.resolve(Qt(t)),o=await st([n,c]);if(!o[0].value&&o[1].value)throw new E("inmemory-raster:open","failed to build in memory raster");var l,u;this._pixelBlockTiles=o[0].value,r||(this.rasterInfo.statistics=(l=o[1].value)==null?void 0:l.statistics),a&&(this.rasterInfo.histograms=(u=o[1].value)==null?void 0:u.histograms)}};x([v({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),x([v()],de.prototype,"data",void 0),de=x([Z("esri.layers.support.rasterDatasets.InMemoryRaster")],de);const bi=de;function ue(t,e){if(!t||!e)return[];let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const s=[];if(e){const r=ue(t,i);for(let a=0;a<r.length;a++)ue(r[a],e).forEach(c=>s.push(c));return s}const n=t.getElementsByTagNameNS("*",i);if(!n||n.length===0)return[];for(let r=0;r<n.length;r++)s.push(n[r]||n.item[r]);return s}function U(t,e){if(!t||!e)return null;let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const s=ue(t,i);return s.length>0?e?U(s[0],e):s[0]:null}function Q(t,e=null){const i=e?U(t,e):t;let s;return i?(s=i.textContent||i.nodeValue,s?s.trim():null):null}function Si(t,e){const i=ue(t,e),s=[];let n;for(let r=0;r<i.length;r++)n=i[r].textContent||i[r].nodeValue,n&&(n=n.trim(),n!==""&&s.push(n));return s}function be(t,e){return Si(t,e).map(i=>Number(i))}function ae(t,e){const i=Q(t,e);return Number(i)}function Pe(t,e){var i;const s=t==null||(i=t.nodeName)==null?void 0:i.toLowerCase(),n=e.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===n}function Xe(t,e){if(!t||!e)return null;const i=[];for(let s=0;s<t.length;s++)i.push(t[s]),i.push(e[s]);return i}function Ti(t){var e;const i=U(t,"GeodataXform"),s=_e(ae(i,"SpatialReference/WKID")||Q(i,"SpatialReference/WKT"));if(i.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:s,transform:null};const n=(e=ae(i,"PolynomialOrder"))!=null?e:1,r=be(i,"CoeffX/Double"),a=be(i,"CoeffY/Double"),c=be(i,"InverseCoeffX/Double"),o=be(i,"InverseCoeffY/Double"),l=Xe(r,a),u=Xe(c,o);return{spatialReference:s,transform:new De({spatialReference:s,polynomialOrder:n,forwardCoefficients:l,inverseCoefficients:u})}}function Ri(t){var e;const i=ae(t,"NoDataValue"),s=U(t,"Histograms/HistItem"),n=ae(s,"HistMin"),r=ae(s,"HistMax"),a=ae(s,"BucketCount"),c=(e=Q(s,"HistCounts"))==null?void 0:e.split("|").map(f=>Number(f));let o,l,u,h;ue(t,"Metadata/MDI").forEach(f=>{var p;const g=Number((p=f.textContent)!=null?p:f.nodeValue);switch(f.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=g;break;case"STATISTICS_MAXIMUM":l=g;break;case"STATISTICS_MEAN":u=g;break;case"STATISTICS_STDDEV":h=g}});const m=ae(t,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:c!=null&&c.length&&o!=null&&l!=null?{min:n,max:r,size:a||c.length,counts:c}:null,sourceBandIndex:m,statistics:o!=null&&l!=null?{min:o,max:l,avg:u,stddev:h}:null}}function _e(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new G({wkid:e});if((t=String(t)).startsWith("COMPD_CS")){if(!t.includes("VERTCS")||!t.includes("GEOGCS")&&!t.startsWith("PROJCS"))return null;const i=t.indexOf("VERTCS"),s=t.indexOf("PROJCS"),n=s>-1?s:t.indexOf("GEOGCS");if(n===-1)return null;const r=t.slice(n,t.lastIndexOf("]",i)+1).trim(),a=t.slice(i,t.lastIndexOf("]")).trim();e=Fe(r);const c=new G(e?{wkid:e}:{wkt:r}),o=Fe(a);return o&&(c.vcsWkid=o),c}return t.startsWith("GEOGCS")||t.startsWith("PROJCS")?(e=Fe(t),new G(e!==0?{wkid:e}:{wkt:t})):null}function Fe(t){var e;const i=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(r=>r.trim()).filter(r=>r!==""),s=i[i.length-1].split(","),n=(e=s[0])==null?void 0:e.toLowerCase();if((n==="epsg"||n==="esri")&&t.endsWith('"]]')){const r=Number(s[1]);if(!isNaN(r)&&r!==0)return r}return 0}function $e(t){var e;if((t==null||(e=t.documentElement.tagName)==null?void 0:e.toLowerCase())!=="pamdataset")return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(n=>{if(n.nodeType===1){if(Pe(n,"SRS")){if(!i.spatialReference){const r=Q(n);i.spatialReference=_e(r)}}else if(Pe(n,"Metadata"))if(n.getAttribute("domain")==="xml:ESRI"){const{spatialReference:r,transform:a}=Ti(n);i.transform=a,i.spatialReference||(i.spatialReference=r)}else ue(n,"MDI").forEach(r=>i.metadata[r.getAttribute("key")]=Q(r));else if(Pe(n,"PAMRasterBand")){const r=Ri(n);r.sourceBandIndex!=null&&i.rasterBands[r.sourceBandIndex]==null?i.rasterBands[r.sourceBandIndex]=r:i.rasterBands.push(r)}}});const s=i.rasterBands;if(s){const n=!!s[0].statistics;i.statistics=n?s.map(a=>a.statistics):null;const r=!!s[0].histogram;i.histograms=r?s.map(a=>a.histogram):null}return i}let Re=class extends he{async open(t){await this.init();const e=await this._fetchData(t);let{spatialReference:i,statistics:s,histograms:n,transform:r}=await this._fetchAuxiliaryData(t);const a=!i;a&&(i=new G({wkid:3857})),n!=null&&n.length&&s==null&&(s=Be(n));const{width:c,height:o}=e;let l=new L({xmin:-.5,ymin:.5-o,xmax:c-.5,ymax:.5,spatialReference:i});const u=r?r.forwardTransform(l):l;let h=!0;if(r){const f=r.forwardCoefficients;h=f&&f[1]===0&&f[2]===0,h&&(r=null,l=u)}const m=new bi({data:{extent:u,nativeExtent:l,transform:r,pixelBlock:e,statistics:s,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await m.open(),this._set("rasterInfo",m.rasterInfo),this._inMemoryRaster=m}fetchRawTile(t,e,i,s={}){return this._inMemoryRaster.fetchRawTile(t,e,i,s)}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t==null?void 0:t.signal}),i=Zt(e).toUpperCase();if(i!=="JPG"&&i!=="PNG"&&i!=="GIF"&&i!=="BMP")throw new E("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(e,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(t){var e,i;const s=te(t==null?void 0:t.signal),n=(e=this.ioConfig.skipExtensions)!=null?e:[],r=n.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:s}),a=this.datasetFormat,c=a==="JPG"?"jgw":a==="PNG"?"pgw":a==="BMP"?"bpw":null,o=n.includes(c)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+c,{responseType:"text",signal:s}),l=await st([r,o]);if(s!=null&&s.aborted)throw pt();const u=$e((i=l[0].value)==null?void 0:i.data);if(!u.transform){const h=l[1].value?l[1].value.data.split(`
`).slice(0,6).map(m=>Number(m)):null;u.transform=(h==null?void 0:h.length)===6?new De({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return u}};x([v({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=x([Z("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const Se=Re;let me=class extends he{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(t){await this.init();const e=t&&t.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;if(this.sourceJSON=s,!s)throw new E("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new E("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=s.cacheType,this.tileType==null&&(n.includes(s.tileInfo.format.toLowerCase())?this.tileType="Map":s.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name.slice(s.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:e});if(!F(r))throw new E("image-server-raster:open","cannot initialize image service");{const a=this.tileType==="Map"?gt(s.tileInfo,s):le.fromJSON(s.tileInfo),{extent:c,pixelSize:o}=r,l=.5/r.width*o.x;let u,h;const m=a.lodAt(Math.max.apply(null,a.lods.map(b=>b.level)));this.tileType!=="Map"&&s.maxScale!==0&&(this.tileType==="Raster"?(u=a.lods.find(b=>b.resolution===o.x),u||(u=a.lods[a.lods.length-1])):(u=a.lods.find(b=>Math.abs(b.scale-s.maxScale)<l),u||(u=a.lods.filter(b=>b.scale>s.maxScale).sort((b,R)=>b.scale>R.scale?1:-1)[0])),o.x=o.y=u.resolution,r.width=Math.ceil((c.xmax-c.xmin)/o.x-.1),r.height=Math.ceil((c.ymax-c.ymin)/o.y-.1)),u||(u=m);const f=a.lodAt(Math.min.apply(null,a.lods.map(b=>b.level)));this.tileType==="Map"?this._levelOffset=a.lods[0].level:s.minScale!==0&&this.tileType==="Elevation"&&(h=a.lods.find(b=>Math.abs(b.scale-s.minScale)<l),this._levelOffset=h.level-f.level),h||(h=f);const p=Math.max(o.x,o.y);(Math.abs(o.x-o.y)>l||!a.lods.some(b=>Math.abs(b.resolution-p)<l))&&(o.x=o.y=u.resolution,r.width=Math.ceil((c.xmax-c.xmin)/o.x-.1),r.height=Math.ceil((c.ymax-c.ymin)/o.y-.1));const g=u.level-h.level,[d,y]=a.size,I=[];a.lods.forEach(b=>{b.level>=h.level&&b.level<=u.level&&I.push({x:b.resolution,y:b.resolution})}),I.sort((b,R)=>b.x-R.x);const w=this.computeBlockBoundary(c,d,y,a.origin,I,g),C=I.length>1?I.slice(1):null;r.storageInfo=new ge({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:C,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:a,blockBoundary:w}),this._fixGCSShift(r),this._set("rasterInfo",r)}if(s.capabilities.toLowerCase().includes("tilemap")){const a={tileInfo:r.storageInfo.tileInfo,parsedUrl:yt(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new xt({layer:a})}}async fetchRawTile(t,e,i,s={}){if(this._slices&&s.sliceId==null)return null;const{storageInfo:n,extent:r}=this.rasterInfo,a=n.maximumPyramidLevel-t+this._levelOffset,c=`${this.url}/tile/${a}/${e}/${i}`,o=this._slices?{sliceId:s.sliceId||0}:null,{data:l}=await this.request(c,{query:o,responseType:"array-buffer",signal:s.signal});if(!l)return null;const u=await this.decodePixelBlock(l,{width:n.tileInfo.size[0],height:n.tileInfo.size[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation"}),h=n.blockBoundary[t];if(n.compression!=="jpg"||i>h.minCol&&i<h.maxCol&&e>h.minRow&&e<h.maxRow)return u;const{origin:m,blockWidth:f,blockHeight:p}=n,{x:g,y:d}=this.getPyramidPixelSize(t),y=Math.round((r.xmin-m.x)/g)%f,I=Math.round((r.xmax-m.x)/g)%f||f,w=Math.round((m.y-r.ymax)/d)%p,C=Math.round((m.y-r.ymin)/d)%p||p,b=i===h.minCol?y:0,R=e===h.minRow?w:0,T=i===h.maxCol?I:f,_=e===h.maxRow?C:p;return ei(u,{x:b,y:R},{width:T-b,height:_-R}),u}getSliceIndex(t){if(!this._slices||O(t)||t.length===0)return null;const e=t;for(let i=0;i<this._slices.length;i++){const s=this._slices[i].multidimensionalDefinition;if(s.length===e.length&&!s.some(n=>{const r=e.find(a=>n.variableName===a.variableName&&a.dimensionName===n.dimensionName);return r?(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0]):!0}))return i}return null}async fetchVariableStatisticsHistograms(t,e){const i=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(r=>{var a;return(a=r.data)==null?void 0:a.statistics}),s=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(r=>{var a;return(a=r.data)==null?void 0:a.histograms}),n=await Promise.all([i,s]);return n[0]&&n[0].forEach(r=>{r.avg=r.mean,r.stddev=r.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(t,0,te(e.datumTransformation));if(i===null)return null;let s=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let r=n-s+this._levelOffset;const a=i.srcLocation;for(;r>=0;){try{if(await this._tilemapCache.fetchAvailability(r,i.row,i.col,e)==="available")break}catch{}if(r--,s++,i=this.identifyPixelLocation(a,s,te(e.datumTransformation)),i===null)return null}return r===-1||i==null?null:s}async _fetchRasterInfo(t){const e=this.sourceJSON,i=Math.ceil((e.extent.xmax-e.extent.xmin)/e.pixelSizeX-.1),s=Math.ceil((e.extent.ymax-e.extent.ymin)/e.pixelSizeY-.1),n=G.fromJSON(e.spatialReference||e.extent.spatialReference);if(this.tileType==="Map")return new ce({width:i,height:s,bandCount:3,extent:L.fromJSON(e.extent),spatialReference:n,pixelSize:new N({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:n}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:r,signal:a}=t,c=!!e.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:r,f:"json"},signal:a}).then(f=>it.fromJSON(f.data)).catch(()=>null),o=!!e.hasColormap&&this.request(this.url+"/colormap",{query:{slice:r,f:"json"},signal:a}).then(f=>{var p;return(p=f.data)==null?void 0:p.colormap}),l=!!e.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:r,f:"json"},signal:a}).then(f=>{var p;return(p=f.data)==null?void 0:p.histograms}),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then(f=>f.data).catch(()=>{}),h=!!e.hasMultidimensions&&this._fetchMultidimensionalInfo(),m=!!e.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then(f=>f.data&&f.data.slices).catch(()=>{});return Promise.all([c,o,l,u,h,m]).then(f=>{let p=null;if(e.minValues&&e.minValues.length===e.bandCount){p=[];for(let g=0;g<e.minValues.length;g++)p.push({min:e.minValues[g],max:e.maxValues[g],avg:e.meanValues[g],stddev:e.stdvValues[g]})}return this._slices=f[5]||null,new ce({width:i,height:s,bandCount:e.bandCount,extent:L.fromJSON(e.extent),spatialReference:n,pixelSize:new N({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:n}),pixelType:e.pixelType.toLowerCase(),statistics:p,attributeTable:f[0]||null,colormap:f[1]||null,histograms:f[2]||null,keyProperties:f[3]||{},multidimensionalInfo:f[4]||null})})}async _fetchMultidimensionalInfo(t){var e;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:t}).then(s=>{var n;return(n=s.data)==null?void 0:n.multidimensionalInfo});return(e=i.variables)!=null&&e.length&&i.variables.forEach(s=>{var n;(n=s.statistics)!=null&&n.length&&s.statistics.forEach(r=>{r.avg=r.mean,r.stddev=r.standardDeviation})}),i}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_fixGCSShift(t){const{extent:e,spatialReference:i}=t;e.xmin===0&&e.xmax===360&&i.wkid&&i.isGeographic&&(t.nativeExtent=t.extent,t.transform=new di,t.extent=t.transform.forwardTransform(e))}};x([v({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),x([v()],me.prototype,"tileType",void 0),me=x([Z("esri.layers.support.rasterDatasets.ImageServerRaster")],me);const _i=me,K=new Map;K.set("Int8","s8"),K.set("UInt8","u8"),K.set("Int16","s16"),K.set("UInt16","u16"),K.set("Int32","s32"),K.set("UInt32","u32"),K.set("Float32","f32"),K.set("Float64","f32"),K.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let oe=class extends he{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){var e;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=t?te(t.signal):null,s=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:r}=this._parseHeader(s.data);if(((e=this.ioConfig.skipExtensions)==null?void 0:e.indexOf("aux.xml"))===-1){const y=await this._fetchAuxiliaryData(t);var a;y!=null&&(n.statistics=(a=y.statistics)!=null?a:n.statistics,n.histograms=y.histograms,y.histograms&&O(n.statistics)&&(n.statistics=Be(y.histograms)))}this._set("rasterInfo",n),this._files=r;const c=await this.request(r.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(c.data);const{blockWidth:o,blockHeight:l}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:m}=this.rasterInfo,f=[],p=this._getBandSegmentCount();let g=0,d=-1;for(;g<this._storageIndex.length;){d++;const y=Math.ceil(h/o/u**d)-1,I=Math.ceil(m/l/u**d)-1;g+=(y+1)*(I+1)*p*4,f.push({maxRow:I,maxCol:y,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,d>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=d),this.updateTileInfo()}async fetchRawTile(t,e,i,s={}){const{blockWidth:n,blockHeight:r,blockBoundary:a}=this.rasterInfo.storageInfo,c=a[t];if(!c||c.maxRow<e||c.maxCol<i||c.minRow>e||c.minCol>i)return null;const{bandCount:o,pixelType:l}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:m}=this._getTileLocation(t,e,i);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const S=new Uint8Array(n*r);return new mi({width:n,height:r,pixels:null,mask:S,validPixelCount:0})}const{bandIds:f}=this.ioConfig,p=this._getBandSegmentCount(),g=[];let d=0;for(d=0;d<p;d++)(!f||f.indexOf[d]>-1)&&g.push(this.request(this._files.data,{range:{from:u[d].from,to:u[d].to},responseType:"array-buffer",signal:s.signal}));const y=await Promise.all(g),I=y.map(S=>S.data.byteLength).reduce((S,k)=>S+k),w=new Uint8Array(I);let C=0;for(d=0;d<p;d++)w.set(new Uint8Array(y[d].data),C),C+=y[d].data.byteLength;const b=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(w.buffer,{width:n,height:r,format:b,planes:(f==null?void 0:f.length)||o,pixelType:l});if(F(this.rasterInfo.noDataValue)&&b!=="lerc"&&!R.mask){const S=this.rasterInfo.noDataValue[0];if(S!=null){const k=R.width*R.height,D=new Uint8Array(k);if(Math.abs(S)>1e24)for(d=0;d<k;d++)Math.abs((R.pixels[0][d]-S)/S)>1e-6&&(D[d]=1);else for(d=0;d<k;d++)R.pixels[0][d]!==S&&(D[d]=1);R.mask=D}}let T=0,_=0;if(h!==n||m!==r){let S=R.mask;if(S)for(d=0;d<r;d++)if(_=d*n,d<m)for(T=h;T<n;T++)S[_+T]=0;else for(T=0;T<n;T++)S[_+T]=0;else for(S=new Uint8Array(n*r),R.mask=S,d=0;d<m;d++)for(_=d*n,T=0;T<h;T++)S[_+T]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let e,i,s,n,r,a;if(ti){for(i=new Uint8Array(t),n=new ArrayBuffer(t.byteLength),s=new Uint8Array(n),r=0;r<t.byteLength/4;r++)for(a=0;a<4;a++)s[4*r+a]=i[4*r+3-a];e=new Uint32Array(n)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,i){const{blockWidth:s,blockHeight:n,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:a,height:c}=this.rasterInfo,o=this._getBandSegmentCount();let l,u,h,m=0,f=0;for(h=0;h<t;h++)f=r**h,l=Math.ceil(a/s/f),u=Math.ceil(c/n/f),m+=l*u;f=r**t,l=Math.ceil(a/s/f),u=Math.ceil(c/n/f),m+=e*l+i,m*=4*o;const p=this._storageIndex.subarray(m,m+4*o);let g=0,d=0;const y=[];for(let I=0;I<o;I++)g=p[4*I+0]*2**32+p[4*I+1],d=g+p[4*I+2]*2**32+p[4*I+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:i<l-1?s:Math.ceil(a/f)-s*(l-1),actualTileHeight:e<u-1?n:Math.ceil(c/f)-n*(u-1)}}_parseHeader(t){const e=U(t,"MRF_META/Raster");if(!e)throw new E("mrf:open","not a valid MRF format");const i=U(e,"Size"),s=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),a=(Q(e,"Compression")||"none").toLowerCase();if(!ee.has(a))throw new E("mrf:open","currently does not support compression "+a);const c=Q(e,"DataType")||"UInt8",o=K.get(c);if(o==null)throw new E("mrf:open","currently does not support pixel type "+c);const l=U(e,"PageSize"),u=parseInt(l.getAttribute("x"),10),h=parseInt(l.getAttribute("y"),10),m=U(e,"DataValues");let f,p;if(m&&(p=m.getAttribute("NoData"),p!=null&&(f=p.trim().split(" ").map(D=>parseFloat(D)))),U(t,"MRF_META/CachedSource"))throw new E("mrf:open","currently does not support MRF referencing other data files");const g=U(t,"MRF_META/GeoTags"),d=U(g,"BoundingBox");let y,I=!1;if(d!=null){const D=parseFloat(d.getAttribute("minx")),P=parseFloat(d.getAttribute("miny")),V=parseFloat(d.getAttribute("maxx")),q=parseFloat(d.getAttribute("maxy")),J=Q(g,"Projection")||"";let A;if(J!=="LOCAL_CS[]")if(J.toLowerCase().startsWith("epsg:")){const M=Number(J.slice(5));isNaN(M)||M===0||(A=new G({wkid:M}))}else A=_e(J);else I=!0,A=new G({wkid:3857});y=new L(D,P,V,q),y.spatialReference=A}else I=!0,y=new L({xmin:-.5,ymin:.5-n,xmax:s-.5,ymax:.5,spatialReference:new G({wkid:3857})});const w=U(t,"MRF_META/Rsets"),C=parseInt(w&&w.getAttribute("scale")||"2",10),b=y.spatialReference,R=new ge({origin:new N({x:y.xmin,y:y.ymax,spatialReference:b}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:C}),T=new N({x:y.width/s,y:y.height/n,spatialReference:b}),_=new ce({width:s,height:n,extent:y,isPseudoSpatialReference:I,spatialReference:b,bandCount:r,pixelType:o,pixelSize:T,noDataValue:f,storageInfo:R}),S=Q(t,"datafile"),k=Q(t,"IndexFile");return{rasterInfo:_,files:{mrf:this.url,index:k||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",ee.get(a).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return $e(e)}catch{return null}}};x([v()],oe.prototype,"_files",void 0),x([v()],oe.prototype,"_storageIndex",void 0),x([v({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),oe=x([Z("esri.layers.support.rasterIO.MRFRaster")],oe);const Ci=oe,Ke=(t,e)=>{const i=t.get(e);return i&&i.values},Te=(t,e)=>{const i=t.get(e);return i&&i.values[0]};let ne=class extends he{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(t){var e,i,s;await this.init();const n=t?te(t.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!r)throw new E("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:a,firstIFD:c,isBigTiff:o}=ii(r),l=[];await this._readIFDs(l,r,a,c,0,o?8:4,n);const u=si(l),{width:h,height:m,tileWidth:f,tileHeight:p,planes:g,pixelType:d,compression:y,firstPyramidLevel:I,maximumPyramidLevel:w,pyramidBlockWidth:C,pyramidBlockHeight:b,tileBoundary:R,affine:T,metadata:_}=u,S=((e=u.extent.spatialReference)==null?void 0:e.wkt)||((i=u.extent.spatialReference)==null?void 0:i.wkid);let k=_e(S),D=!1;k==null&&(D=!0,k=new G({wkid:3857}));const P=new L(W($({},u.extent),{spatialReference:k})),V=new N(P?{x:P.xmin,y:P.ymax,spatialReference:k}:{x:0,y:0}),q=new ge({blockWidth:f,blockHeight:p,pyramidBlockWidth:C,pyramidBlockHeight:b,compression:y,origin:V,firstPyramidLevel:I,maximumPyramidLevel:w,blockBoundary:R}),J=new N({x:(P.xmax-P.xmin)/h,y:(P.ymax-P.ymin)/m,spatialReference:k}),A=_?{BandProperties:_.bandProperties,DataType:_.dataType}:{},M=new ce({width:h,height:m,bandCount:g,pixelType:d,compression:y,pixelSize:J,storageInfo:q,spatialReference:k,isPseudoSpatialReference:D,keyProperties:A,extent:P,statistics:_?_.statistics:null});if(T!=null&&T.length&&(M.nativeExtent=new L({xmin:-.5,ymin:.5-m,xmax:h-.5,ymax:.5,spatialReference:k}),M.transform=new De({polynomialOrder:1,forwardCoefficients:[T[2]+T[0]/2,T[5]-T[3]/2,T[0],T[3],-T[1],-T[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new N({x:(P.xmax-P.xmin)/h,y:(P.ymax-P.ymin)/m,spatialReference:k}),q.origin.x=-.5,q.origin.y=.5),(s=this.ioConfig.skipExtensions)==null||!s.includes("aux.xml")){const B=await this._fetchAuxiliaryData(t);if(B!=null){var j;if(M.statistics=(j=B.statistics)!=null?j:M.statistics,M.histograms=B.histograms,B.histograms&&O(M.statistics)&&(M.statistics=Be(B.histograms)),B.transform&&!T){M.transform=B.transform,M.nativeExtent=M.extent;const Y=M.transform.forwardTransform(M.nativeExtent);M.pixelSize=new N({x:(Y.xmax-Y.xmin)/h,y:(Y.ymax-Y.ymin)/m,spatialReference:k}),M.extent=Y}M.spatialReference||(M.spatialReference=B.spatialReference)}}if(this._set("rasterInfo",M),this._headerInfo=$({littleEndian:a,isBigTiff:o,ifds:l},u),!this._headerInfo.isSupported)throw new E("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(t,e,i,s={}){var n;if((n=this._headerInfo)==null||!n.isSupported||this.isBlockOutside(t,e,i))return null;const r=this._getTileLocation(t,e,i);if(!r)return null;const{ranges:a,actualTileWidth:c,actualTileHeight:o,ifd:l}=r,u=a.map(R=>this.request(this.url,{range:R,responseType:"array-buffer",signal:s.signal})),h=await Promise.all(u),m=h.map(R=>R.data.byteLength).reduce((R,T)=>R+T),f=h.length===1?h[0].data:new ArrayBuffer(m),p=[0],g=[0];if(h.length>1){const R=new Uint8Array(f);for(let T=0,_=0;T<h.length;T++){const S=h[T].data;R.set(new Uint8Array(S),_),p[T]=_,_+=S.byteLength,g[T]=S.byteLength}}const{blockWidth:d,blockHeight:y}=this.getBlockWidthHeight(t),I=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:p,sizes:g},width:d,height:y,planes:null,pixelType:null});let w,C,b;if(c!==d||o!==y){let R=I.mask;if(R)for(w=0;w<y;w++)if(b=w*d,w<o)for(C=c;C<d;C++)R[b+C]=0;else for(C=0;C<d;C++)R[b+C]=0;else for(R=new Uint8Array(d*y),I.mask=R,w=0;w<o;w++)for(b=w*d,C=0;C<c;C++)R[b+C]=1}return I}async _readIFDs(t,e,i,s,n,r=4,a){if(!s)return null;(s>=e.byteLength||s<0)&&(e=(await this.request(this.url,{range:{from:s+n,to:s+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=s+n,s=0);const c=await this._readIFD(e,i,s,n,Ie.TIFF_TAGS,r,a);if(t.push(c.ifd),!c.nextIFD)return null;await this._readIFDs(t,e,i,c.nextIFD-n,n,r,a)}async _readIFD(t,e,i,s,n=Ie.TIFF_TAGS,r=4,a){if(!t)return null;const c=ri(t,e,i,s,n,r);if(c.success){const o=[];if(c.ifd.forEach(l=>{l.values||o.push(l)}),o.length>0){const l=o.map(h=>h.offlineOffsetSize),u=Math.min.apply(null,l.map(h=>h[0]));if(Math.min.apply(null,l.map(h=>h[0]+h[1]))-u<=this._bufferSize){const{data:h}=await this.request(this.url,{range:{from:u,to:u+this._bufferSize},responseType:"array-buffer",signal:a});t=h,s=u,o.forEach(m=>ni(t,e,m,s))}}if(c.ifd.has("GEOKEYDIRECTORY")){const l=c.ifd.get("GEOKEYDIRECTORY"),u=l.values;if(u&&u.length>4){const h=u[0]+"."+u[1]+"."+u[2],m=await this._readIFD(t,e,l.valueOffset+6-s,s,Ie.GEO_KEYS,2,a);l.data=m.ifd,l.data&&l.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[h]})}}return c}if(c.requiredBufferSize&&c.requiredBufferSize!==t.byteLength)return(t=(await this.request(this.url,{range:{from:s,to:s+c.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<c.requiredBufferSize?null:this._readIFD(t,e,0,s,Ie.TIFF_TAGS,4,a)}_getTileLocation(t,e,i){const{firstPyramidLevel:s,blockBoundary:n}=this.rasterInfo.storageInfo,r=t===0?0:t-(s-1),a=this._headerInfo.ifds[r];if(!a)return null;const c=ai(a,this._headerInfo),o=Ke(a,"TILEOFFSETS");if(o===void 0)return null;const l=Ke(a,"TILEBYTECOUNTS"),{minRow:u,minCol:h,maxRow:m,maxCol:f}=n[r];if(e>m||i>f||e<u||i<h)return null;const p=Te(a,"IMAGEWIDTH"),g=Te(a,"IMAGELENGTH"),d=Te(a,"TILEWIDTH"),y=Te(a,"TILELENGTH"),I=c?this.rasterInfo.bandCount:1,w=I*e*(f+1)+i,C=[{from:o[w],to:o[w+I-1]+l[w+I-1]-1}];if(c){let T=!0;for(let _=0;_<I;_++)if(o[w+_]+l[w+_]!==o[w+_+1]){T=!1;break}if(!T)for(let _=0;_<I;_++)C[_]={from:o[w+_],to:o[w+_]+l[w+_]-1}}const b=o[w],R=l[w];return b==null||R==null?null:{ranges:C,ifd:a,actualTileWidth:i===f?p%d:d,actualTileHeight:e===m?g%y:y}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return $e(e)}catch{return null}}};x([v()],ne.prototype,"_files",void 0),x([v()],ne.prototype,"_headerInfo",void 0),x([v()],ne.prototype,"_bufferSize",void 0),x([v({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),ne=x([Z("esri.layers.support.rasterDatasets.TIFFRaster")],ne);const ki=ne,H=new Map;H.set("CRF",{desc:"Cloud Raster Format",constructor:vi}),H.set("MRF",{desc:"Meta Raster Format",constructor:Ci}),H.set("TIFF",{desc:"GeoTIFF",constructor:ki}),H.set("RasterTileServer",{desc:"Raster Tile Server",constructor:_i}),H.set("JPG",{desc:"JPG Raster Format",constructor:Se}),H.set("PNG",{desc:"PNG Raster Format",constructor:Se}),H.set("GIF",{desc:"GIF Raster Format",constructor:Se}),H.set("BMP",{desc:"BMP Raster Format",constructor:Se});class Mi{static get supportedFormats(){const e=new Set;return H.forEach((i,s)=>e.add(s)),e}static async open(e){const{url:i,ioConfig:s,sourceJSON:n}=e;let r=e.datasetFormat;r==null&&i.lastIndexOf(".")&&(r=i.slice(i.lastIndexOf(".")+1).toUpperCase()),r==="OVR"||r==="TIF"?r="TIFF":r!=="JPG"&&r!=="JPEG"&&r!=="JFIF"||(r="JPG"),i.toLowerCase().includes("/imageserver")&&!i.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const a={url:i,sourceJSON:n,datasetFormat:r,ioConfig:s||{bandIds:null,sampling:null}};let c,o;if(this.supportedFormats.has(r))return c=H.get(r).constructor,o=new c(a),await o.open({signal:e.signal}),o;if(r)throw new E("rasterfactory:open","not a supported format "+r);const l=Array.from(H.keys());let u=0;const h=()=>(r=l[u++],r?(c=H.get(r).constructor,o=new c(a),o.open({signal:e.signal}).then(()=>o).catch(()=>h())):null);return h()}static register(e,i,s){H.has(e.toUpperCase())||H.set(e.toUpperCase(),{desc:i,constructor:s})}}let z=class extends It(wt(vt(bt(St(pi(Tt(Rt(_t(Ct))))))))){constructor(...t){super(...t),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(t,e){return typeof t=="string"?$({url:t},e):t}load(t){const e=F(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(kt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var t,e;let i=[new pe({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const s=(t=this.rasterInfo)==null||(e=t.attributeTable)==null?void 0:e.fields,n="Raster.";if(s){const c=s.filter(o=>o.type!=="oid"&&o.name.toLowerCase()!=="value").map(o=>{const l=o.clone();return l.name=n+o.name,l});i=i.concat(c)}const r=this.rasterInfo.dataType;if((r==="vector-magdir"||r==="vector-uv")&&F(this.rasterInfo.multidimensionalInfo)){var a;const c=(a=this.rasterInfo.multidimensionalInfo.variables[0].unit)==null?void 0:a.trim(),o="Magnitude"+(c?` (${c})`:"");i.push(new pe({name:"Raster.Magnitude",alias:o,domain:null,editable:!1,type:"double"})),i.push(new pe({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return i}set renderer(t){this._set("renderer",t),this.updateRenderer()}readRenderer(t,e,i){const s=e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,n=Lt(s,i)||void 0;if(n!=null)return n}createPopupTemplate(t){return Mt({fields:this.rasterFields,title:this.title},t)}write(t,e){const{raster:i}=this;if(this.loaded?i.datasetFormat==="RasterTileServer"&&(i.tileType==="Raster"||i.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e&&e.messages){const s=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new E("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${s}'`,{layer:this}))}return null}async _openRaster(t){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await Mi.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:W($({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:t});const{rasterInfo:e}=this.raster;if(!e)throw new E("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const i=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:W($({},this.sourceJSON),{minScale:0,maxScale:0});this.read(i,{origin:"service"})}this.title==null&&(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.own(Pt(()=>this.customParameters,i=>{this.raster.ioConfig.customFetchParameters=i}))}};x([v({type:[Ft],json:{write:{overridePolicy(){var t;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((t=this.bandIds)==null?void 0:t.join(","))!=="0,1,2"}}}}})],z.prototype,"bandIds",void 0),x([v({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Bt(Nt)],z.prototype,"interpolation",void 0),x([v({json:{write:!0}})],z.prototype,"multidimensionalDefinition",void 0),x([v(Dt)],z.prototype,"legendEnabled",void 0),x([v({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],z.prototype,"isReference",void 0),x([v({type:["show","hide"]})],z.prototype,"listMode",void 0),x([v()],z.prototype,"sourceJSON",void 0),x([v({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],z.prototype,"version",void 0),x([v()],z.prototype,"title",void 0),x([v({readOnly:!0,json:{read:!1}})],z.prototype,"type",void 0),x([v({type:["ArcGISTiledImageServiceLayer"]})],z.prototype,"operationalLayerType",void 0),x([v({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,i){e[i]=!t}}}})],z.prototype,"popupEnabled",void 0),x([v({type:$t,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],z.prototype,"popupTemplate",void 0),x([v({readOnly:!0})],z.prototype,"defaultPopupTemplate",null),x([v({readOnly:!0,type:[pe]})],z.prototype,"fields",void 0),x([v({readOnly:!0,type:[pe]})],z.prototype,"rasterFields",null),x([v({types:rt,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var t;const e=((t=this.renderer)==null?void 0:t.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!e}}},origins:{"web-scene":{types:Jt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],z.prototype,"renderer",null),x([Ot("renderer")],z.prototype,"readRenderer",null),z=x([Z("esri.layers.ImageryTileLayer")],z);const Hi=z;export{Hi as default};
