import{dC as u,dD as _,iD as m,bR as f,fd as T,e2 as y,iE as l,r as g,bb as x,dG as p,dH as c,P as v,g as O,t as C,e as i,d as s,eP as H,n as S}from"./index.25dca4c3.js";import{h as D}from"./I3SMeshView3D.50e65ef0.js";import"./I3SAttributeOverrides.5c3ef82a.js";import"./I3SNode.ded1d4b4.js";import"./I3SUtil.97965178.js";import"./I3SBinaryReader.27097d23.js";import"./SceneModification.b16db4b6.js";import"./persistable.8dfeecdd.js";import"./multiOriginJSONSupportUtils.8128aa52.js";import"./Graphics3DScaleVisibility.524687fd.js";import"./optimizedFeatureQueryEngineAdapter.163a3827.js";import"./centroid.50387db0.js";import"./PooledRBush.97be3399.js";import"./quickselect.03306040.js";import"./SceneLayerWorker.8736c434.js";import"./attributeUtils.99d8ee08.js";const N=.2;let r=class extends D(u(_)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage,this._overlayTexOffset=f(-1,-1,-1,-1),this._overlayTexScale=T(),this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}get progressiveLoadFactor(){return this.lodFactor>=1?N:1}setDrapingTextures(e){this._clearDrapingTexture(y.INNER),this._clearDrapingTexture(y.OUTER);for(const t of e){const o=t.index,a=t.extent,n=t.needsColorWithoutRasterImage?t.getValidTarget(l.ColorNoRasterImage):t.hasDrapedFeatureSource?t.getValidTarget(l.Color):null;if(g(n)&&x(a)>0){this._overlayTexOffset[2*o]=-a[0]/p(a),this._overlayTexOffset[2*o+1]=-a[1]/c(a),this._overlayTexScale[2*o]=1/p(a),this._overlayTexScale[2*o+1]=1/c(a);const h=t.getValidTarget(l.Highlight),d=t.getValidTarget(l.Water);this._overlayColor=n.getTexture(),this._overlayHighlight=h?h.getTexture():null,this._overlayNormal=d?d.getTexture():null}}this._forAllNodes(t=>g(t)&&this._collection.updateMaterial(t.objectHandle,o=>this._updateMaterialOverlay(o)))}_clearDrapingTexture(e){this._overlayTexOffset[2*e]=-1,this._overlayTexOffset[2*e+1]=-1,this._overlayTexScale[2*e]=0,this._overlayTexScale[2*e+1]=0,this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}_updateMaterialOverlay(e){e.overlayColor=this._overlayColor,e.overlayHighlight=this._overlayHighlight,e.ovNormalTex=this._overlayNormal,e.overlayTexOffset=this._overlayTexOffset,e.overlayTexScale=this._overlayTexScale}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),v),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const e=new O;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),C(this.layer.modifications))return void(this._modifications=[]);const e=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>e,()=>this._modifications=e.toArray(),v),"modifications")}};i([s()],r.prototype,"layer",void 0),i([s({aliasOf:"layer"})],r.prototype,"i3slayer",void 0),i([s(H)],r.prototype,"updatingProgress",void 0),i([s({readOnly:!0,aliasOf:"_controller.updatingProgress"})],r.prototype,"updatingProgressValue",void 0),i([s({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],r.prototype,"lodFactor",void 0),i([s({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([S("esri.views.3d.layers.SceneLayerView3D")],r);const z=r;export{z as default};
